{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board_List = _resolveComponent(\"Board_List\");\n\n  const _component_Paging = _resolveComponent(\"Paging\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Board_List), _createVNode(_component_Paging), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-info float-right\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goWrite && $setup.goWrite(...args))\n  }, \"글 쓰 기\")], 64);\n}","map":{"version":3,"mappings":";;;;;;6DACIA,aAAaC,qBAAb,GACAD,aAASE,iBAAT,GACAC,oBAAsF,QAAtF,EAAsF;IAA9EC,IAAI,EAAC,QAAyE;IAAhEC,KAAK,EAAC,0BAA0D;IAA9BC,OAAK,yCAAEC,yCAAF;EAAyB,CAAtF,EAAwE,OAAxE","names":["_createVNode","_component_Board_List","_component_Paging","_createElementVNode","type","class","onClick","$setup"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\pages\\board\\board_list.vue"],"sourcesContent":["<template>\r\n    <Board_List/>\r\n    <Paging/>\r\n    <button type=\"button\" class=\"btn btn-info float-right\" @click=\"goWrite\">글 쓰 기</button>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router';\r\nimport Board_List from '../../component/board/board_list.vue';\r\nimport Paging from '../../component/pageDo.vue';\r\nexport default {\r\n            components:{\r\n                Board_List, Paging\r\n            },\r\n            props:{\r\n                parent_id:{\r\n                    type:String,\r\n                    required:false\r\n                }\r\n            },\r\n            emits:['parent_getSession'],\r\n            setup(props, context){\r\n\r\n                //부모 컴포넌트 App_1.vue에 있는 getSession을 호출합니다.\r\n                //<router-view @parent_getSession=\"getSession\" :parent_id=\"id\" />\r\n                context.emit(\"parent_getSession\");\r\n\r\n                const router = useRouter();\r\n                const goWrite=()=>{\r\n                    router.push({\r\n                        name:'Board_Write',\r\n                        params:{id:props.parent_id}\r\n                    });\r\n                }\r\n                return {\r\n                    goWrite\r\n                }\r\n            }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}