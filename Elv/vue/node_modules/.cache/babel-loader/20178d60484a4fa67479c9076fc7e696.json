{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\r\\n        1. v-로 시작하는 속성은 디렉티브라고 하며 주로 단방향 데이터 바인딩과 관련된 처리를 실시합니다.,\\r\\n            중요한 것은 디렉티브의 값이 자바스크립트에서 리턴한 프로퍼티를 사용합니다\\r\\n        \\r\\n        2, 다음은 태그의 속성을 데이터로 지정하고 싶을 때 사용하는 v-bind 입니다.\\r\\n            형식)\\r\\n                (1) <태그명 v-bind:태그속성=\\\"프로퍼티\\\"></태그명>\\r\\n                (2) <태그명 :태그속성=\\\"프로퍼티명\\\"></태그명>\\r\\n\\r\\n            예)\\r\\n                (1) <p v-bind:class=\\\"프로퍼티명\\\">\\r\\n                (2) v-bind: => :로 간단히 사용 가능합니다.\\r\\n                        <p :class=\\\"프로퍼티명\\\">\\r\\n                            \\r\\n        3. 클래스 속성 지정 방법\\r\\n                (1) <p :class=\\\"프로퍼티명\\\">\\r\\n                (2) <p :class=\\\"[프로퍼티명,  프로퍼티명, ..]\\\">\\r\\n                (3) <p :class=\\\"{클래스명 : 프로퍼티명의 값이 true 또는 false}\\\">\\r\\n    \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: _normalizeClass({\n      'cancel': $setup.isTrue\n    })\n  }, \"isTrue가 참이면 클래스 cancel이 적용됩니다.\", 2\n  /* CLASS */\n  ), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      'cancel': $setup.isFalse\n    })\n  }, \"isFalse가 참이면 클래스 cancel이 적용되지 않습니다.\", 2\n  /* CLASS */\n  )])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAoBKA,KAAK,EAAC;;;6DAnBPC,qvBAmBJC,oBAKM,KALN,cAKM,CAHFA,oBAAkE,GAAlE,EAAkE;IAA9DF,KAAK;MAAA,UAAcG;IAAd;EAAyD,CAAlE,EAAgC,gCAAhC,EAA8D;EAAA;EAA9D,CAGE,EADFD,oBAAwE,GAAxE,EAAwE;IAApEF,KAAK;MAAA,UAAcG;IAAd;EAA+D,CAAxE,EAAiC,qCAAjC,EAAoE;EAAA;EAApE,CACE,CALN","names":["class","_createCommentVNode","_createElementVNode","$setup"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex03_v_bind\\App2_class2.vue"],"sourcesContent":["<template>\r\n    <!--\r\n        1. v-로 시작하는 속성은 디렉티브라고 하며 주로 단방향 데이터 바인딩과 관련된 처리를 실시합니다.,\r\n            중요한 것은 디렉티브의 값이 자바스크립트에서 리턴한 프로퍼티를 사용합니다\r\n        \r\n        2, 다음은 태그의 속성을 데이터로 지정하고 싶을 때 사용하는 v-bind 입니다.\r\n            형식)\r\n                (1) <태그명 v-bind:태그속성=\"프로퍼티\"></태그명>\r\n                (2) <태그명 :태그속성=\"프로퍼티명\"></태그명>\r\n\r\n            예)\r\n                (1) <p v-bind:class=\"프로퍼티명\">\r\n                (2) v-bind: => :로 간단히 사용 가능합니다.\r\n                        <p :class=\"프로퍼티명\">\r\n                            \r\n        3. 클래스 속성 지정 방법\r\n                (1) <p :class=\"프로퍼티명\">\r\n                (2) <p :class=\"[프로퍼티명,  프로퍼티명, ..]\">\r\n                (3) <p :class=\"{클래스명 : 프로퍼티명의 값이 true 또는 false}\">\r\n    -->\r\n<div class=\"container\">\r\n\r\n    <p :class=\"{'cancel' : isTrue}\">isTrue가 참이면 클래스 cancel이 적용됩니다.</p>\r\n    \r\n    <p :class=\"{'cancel' : isFalse}\">isFalse가 참이면 클래스 cancel이 적용되지 않습니다.</p>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    setup(){\r\n        const isTrue = true;\r\n        const isFalse = false;\r\n\r\n        return{\r\n           isTrue, isFalse\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.cancel{text-decoration:line-through}\r\n</style>"]},"metadata":{},"sourceType":"module"}