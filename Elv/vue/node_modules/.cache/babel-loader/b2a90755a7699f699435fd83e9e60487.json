{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8e04d01e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"parent\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_child = _resolveComponent(\"child\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_child), _createTextVNode(\" [parent]\" + _toDisplayString(_ctx.store_message), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;;;uBAAXC,oBAGM,KAHN,cAGM,CAFJC,aAAeC,gBAAf,CAEI,mBAFW,cACPC,iBAAEC,kBAAF,GAAe;EAAA;GACnB,CAHN","names":["class","_createElementBlock","_createVNode","_component_child","_toDisplayString","_ctx"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex17_store\\_1\\parentView.vue"],"sourcesContent":["<template>\r\n  <div class=\"parent\">\r\n    <child></child>\r\n    [parent]{{store_message}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport child from './childView.vue';\r\nimport {ref} from 'vue';\r\nimport {useStore} from 'vuex';\r\nexport default {\r\n    components:{\r\n        child\r\n    },\r\n    setup(){\r\n      /* \r\n        store영역의 state.message에 접근하기 위해 아래와 같은 방법으로 접근합니다\r\n        (1) 일반적인 접근\r\n        \r\n      */\r\n          const store = userStore();\r\n\r\n          let message = ref('');\r\n          message.value = store.state.message;\r\n\r\n          return{\r\n            message\r\n          }\r\n      }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.parent{\r\n    background: cornsilk;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}