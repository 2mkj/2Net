{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa375ea\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"로그인\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"아이디\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"비밀번호\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\",\n  name: \"remember\",\n  style: {\n    \"margin-bottom\": \"15px\"\n  }\n}), /*#__PURE__*/_createTextVNode(\"Remember me \")], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  class: \"clearfix\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submitbtn\"\n}, \"로그인\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.loginProcess && $setup.loginProcess(...args), [\"prevent\"]))\n  }, [_hoisted_1, _hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.id = $event),\n    name: \"id\",\n    placeholder: \"Enter id\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.id]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    name: \"password\",\n    placeholder: \"Enter password\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"join\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.join && $setup.join(...args))\n  }, \"회원가입\")])], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;;;gEAEIA,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;gEACAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEACAA,oBAAU,GAAV,EAAU,IAAV,EAAG,KAAH,EAAM;AAAA;AAAN;;gEAGAA,oBAAW,GAAX,EAAW,IAAX,EAAG,MAAH,EAAO;AAAA;AAAP;;gEAEAA,oBAEQ,OAFR,EAEQ,IAFR,EAEQ,cADNA,oBAAkE,OAAlE,EAAkE;EAA3DC,IAAI,EAAC,UAAsD;EAA3CC,IAAI,EAAC,UAAsC;EAA3BC,KAA0B,EAA1B;IAAA;EAAA;AAA2B,CAAlE,CACM,gCAD4D,eAC5D,CAFR;;AAAA;;;EAGKC,KAAK,EAAC;;;gEACTJ,oBAAoD,QAApD,EAAoD;EAA5CC,IAAI,EAAC,QAAuC;EAA9BG,KAAK,EAAC;AAAwB,CAApD,EAAwC,KAAxC,EAA2C;AAAA;AAA3C;;;uBAZJC,oBAeO,MAfP,EAeO;IAfAC,QAAM,wDAAUC,mDAAV,EAAsB,WAAtB;EAeN,CAfP,GACEC,YACAC,YACAC,4BACAV,oBAA0E,OAA1E,EAA0E;IAAnEC,IAAI,EAAC,MAA8D;+DAA9CM,YAAEI,OAA4C;IAA1CT,IAAI,EAAC,IAAqC;IAAhCU,WAAW,EAAC,UAAoB;IAATC,QAAQ,EAAR;EAAS,CAA1E;;EAAA,kBAA4BN,cAE5BO,4BACAd,oBAAgG,OAAhG,EAAgG;IAAzFC,IAAI,EAAC,UAAoF;+DAAhEM,kBAAQI,OAAwD;IAAtDT,IAAI,EAAC,UAAiD;IAAtCU,WAAW,EAAC,gBAA0B;IAATC,QAAQ,EAAR;EAAS,CAAhG;;EAAA,kBAAgCN,oBAChCQ,YAGAf,oBAGM,KAHN,cAGM,CAFJgB,UAEI,EADJhB,oBAA8D,QAA9D,EAA8D;IAAtDC,IAAI,EAAC,QAAiD;IAAxCG,KAAK,EAAC,MAAkC;IAA1Ba,OAAK,yCAAEV,mCAAF;EAAqB,CAA9D,EAAiD,MAAjD,CACI,CAHN,EAXF;;EAAA","names":["_createElementVNode","type","name","style","class","_createElementBlock","onSubmit","$setup","_hoisted_1","_hoisted_2","_hoisted_3","$event","placeholder","required","_hoisted_4","_hoisted_5","_hoisted_7","onClick"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\component\\member\\member_login.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"loginProcess\">\r\n    <h1>로그인</h1>\r\n    <hr>\r\n    <b>아이디</b>\r\n    <input type=\"text\" v-model=\"id\" name=\"id\" placeholder=\"Enter id\" required>\r\n\r\n    <b>비밀번호</b>\r\n    <input type=\"password\" v-model=\"password\" name=\"password\" placeholder=\"Enter password\" required>\r\n    <label>\r\n      <input type=\"checkbox\" name=\"remember\" style=\"margin-bottom:15px\">Remember me\r\n    </label>\r\n    <div class=\"clearfix\">\r\n      <button type=\"submit\" class=\"submitbtn\">로그인</button>\r\n      <button type=\"button\" class=\"join\" @click=\"join\">회원가입</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport {useRouter} from 'vue-router'\r\nimport {ref} from 'vue';\r\n//npm install vue-cookies\r\nimport cookies from 'vue-cookies'; //vue에서 쿠키를 사용하기 위한 cookies를 import합니다.\r\nimport axios from '../../axios/axiossetting.js';\r\nexport default {\r\n  emit:[\"parent_getSession\"],\r\n  setup(props, context){\r\n    //부모 컴포넌트 App_1.vue에 있는 getSession을 호출합니다.\r\n    //<router-view @parent_getSession=\"getSession\" :parent_id=\"id\" />\r\n    console.log('member_login : setup')\r\n    context.emit(\"parent_getSession\", \"\");\r\n\r\n    const router = useRouter(); //useRouter()는 라우터 인스턴스를 반환합니다.\r\n    const join = () => {\r\n      router.push({\r\n        name:'Join'\r\n      });\r\n    }\r\n\r\n    const remember = ref(false);\r\n    const id =ref(\"\");\r\n    const password = ref(\"\");\r\n\r\n    const getCookie = () => {\r\n      //이름이 saveid인 쿠키를 가져옵니다.\r\n      const cookie_value = cookies.get(\"saveid\");\r\n      console.log(\"가져온 쿠키값=\"+cookie_value);\r\n      if(cookie_value!=null){\r\n        remember.value=true; //체크박스 체크합니다.\r\n        id.value = cookie_value; //쿠키에 저장된 아이디값 input에 나타납니다.\r\n      } else {\r\n        remember.value=false; //체크박스 해제합니다.\r\n      }\r\n    }\r\n    getCookie();\r\n\r\n    const loginProcess = async () => {\r\n      try{\r\n              const res = await axios.post(\"members\",{\r\n                id : id.value,\r\n                password: password.value\r\n              });\r\n                  console.log(\"login.vue:res.data=\"+res.data);\r\n                  const result = res.data;\r\n                  if(result == -1){\r\n                    alert(\"아이디가 존재하지 않습니다.\");\r\n                  }else if(result == 0){\r\n                    alert(\"비밀번호가 일치하지 않습니다.\");\r\n                  }else if(result == 1){\r\n                    \r\n                    console.log(\"remember\" + remember.value);\r\n                  \r\n                    if(remember.value){ //체크박스 선택한 경우\r\n                      /* \r\n                          set(name, value, expire) : expire(만료일)을 갖는 name과 value를 가진 쿠키를 설정합니다.\r\n                            1s : 1초\r\n                            1h : 1시간 (60*60)\r\n                            1d : 1일 (24*60*60)\r\n                            1m : 1달\r\n                            new Date(2021,08,30).toUTCString() : 특정 시간\r\n                                      (toUTCString() - 날짜를 UTC(협정 세계시) 형식으로 표현합니다.)\r\n                      */\r\n                    cookies.set(\"saveid\", id.value, \"1d\"); //1일 동안 유효한 쿠키를 설정합니다.\r\n                    //cookies.set(\"saveid\", id.value, 24*60*60)\r\n                    }else { //체크박스 해제한 경우\r\n                      cookies.remove(\"saveid\"); //쿠키 제거\r\n                    }\r\n\r\n                      router.push({\r\n                        name : \"Board_List\"\r\n                      });\r\n                  }\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }; // loginProcess end\r\n\r\n    return {\r\n      join, id, password, loginProcess, remember\r\n    }\r\n}//setup\r\n}\r\n</script>\r\n<style scoped>\r\nbody {font-family: Arial, Helvetica, sans-serif;}\r\n\r\n* {box-sizing: border-box}\r\n\r\ninput{border-radius:3px;border:1px solid lightgray}\r\ninput[type=text], input[type=password] {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin: 5px 0 22px 0;\r\n    display: inline-block;\r\n}\r\n\r\n\r\ninput[type=text]:focus, input[type=password]:focus {\r\n    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\r\n    outline: none;\r\n}\r\n\r\nbutton {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    opacity: 0.9;\r\n}\r\nbutton:nth-child(1){border-radius:3px 0 0 3px}\r\nbutton:nth-child(2){border-radius:0 3px 3px 0px}\r\nbutton:hover {\r\n    opacity:1;\r\n    \r\n}\r\nbutton:focus{\r\n   outline:none;\r\n}\r\n\r\n\r\n.join{\r\n    padding: 14px 20px;\r\n    background-color: #f44336;\r\n}\r\n\r\n.join, .submitbtn {\r\n  height:45px;\r\n  float: left;\r\n  width: 50%;\r\n}\r\na{color:white;text-decoration:none;}\r\n\r\nform {\r\n    background-color: #fefefe;\r\n    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n    border: 1px solid lightgray;\r\n    width: 500px; /* Could be more or less, depending on screen size */\r\n    padding: 16px;\r\n}\r\n\r\nhr {\r\n    border: 1px solid #f1f1f1;\r\n    margin-bottom: 25px;\r\n}\r\n \r\n h1{text-align:center}\r\n\r\n/* Clear floats */\r\n.clearfix::after {\r\n    content: \"\";\r\n    clear: both;\r\n    display: table; \r\n}\r\nspan{vertical-align: top}\r\n\r\n@media screen and (max-width: 300px) {\r\n    .join, .signupbtn {\r\n       width: 100%;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}