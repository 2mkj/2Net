{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-384d13da\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"MVC 게시판 - reply 페이지\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"board_name\"\n}, \"글쓴이\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"board_subject\"\n}, \"제목\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"board_content\"\n}, \"내용\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"board_pass\"\n}, \"비밀번호\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"답변\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.reply && $setup.reply(...args), [\"prevent\"]))\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"input\", {\n    readonly: \"\",\n    value: $props.parent_id,\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.board.board_SUBJECT = $event),\n    maxlength: \"100\",\n    required: \"\",\n    class: \"form-control\",\n    placeholder: \"Enter board_subject\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.board.board_SUBJECT, void 0, {\n    lazy: true\n  }]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.board.board_CONTENT = $event),\n    required: \"\",\n    rows: \"10\",\n    class: \"form-control\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.board.board_CONTENT, void 0, {\n    lazy: true\n  }]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.board.board_PASS = $event),\n    maxlength: \"30\",\n    required: \"\",\n    class: \"form-control\",\n    placeholder: \"Enter board_pass\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.board.board_PASS, void 0, {\n    lazy: true\n  }]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"button\", {\n    type: \"reset\",\n    class: \"btn btn-danger\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.goDetail && $setup.goDetail(...args))\n  }, \"취소\")])], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;;;gEAGQA,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,EAAuB;AAAA;AAAvB;;;EACKC,KAAK,EAAC;;;gEACPD,oBAAmC,OAAnC,EAAmC;EAA5BE,GAAG,EAAC;AAAwB,CAAnC,EAAwB,KAAxB,EAA2B;AAAA;AAA3B;;;;EAICD,KAAK,EAAC;;;gEACPD,oBAAqC,OAArC,EAAqC;EAA9BE,GAAG,EAAC;AAA0B,CAArC,EAA2B,IAA3B,EAA6B;AAAA;AAA7B;;;EAICD,KAAK,EAAC;;;gEACPD,oBAAqC,OAArC,EAAqC;EAA9BE,GAAG,EAAC;AAA0B,CAArC,EAA2B,IAA3B,EAA6B;AAAA;AAA7B;;;EAKCD,KAAK,EAAC;;;iEACPD,oBAAoC,OAApC,EAAoC;EAA7BE,GAAG,EAAC;AAAyB,CAApC,EAAwB,MAAxB,EAA4B;AAAA;AAA5B;;;EAKCD,KAAK,EAAC;;;iEACPD,oBAAyD,QAAzD,EAAyD;EAAjDG,IAAI,EAAC,QAA4C;EAAnCF,KAAK,EAAC;AAA6B,CAAzD,EAA8C,IAA9C,EAAgD;AAAA;AAAhD;;;uBA1BVG,oBA8BM,KA9BN,EA8BM,IA9BN,EA8BM,CA7BJJ,oBA4BO,MA5BP,EA4BO;IA5BAK,QAAM,wDAAUC,qCAAV,EAAe,WAAf;EA4BN,CA5BP,GACIC,YACAP,oBAGM,KAHN,cAGM,CAFFQ,UAEE,EADFR,oBAAoE,OAApE,EAAoE;IAA7DS,QAAQ,EAAR,EAA6D;IAAnDC,KAAK,EAAEC,gBAA4C;IAAjCR,IAAI,EAAC,MAA4B;IAArBF,KAAK,EAAC;EAAe,CAApE;;EAAA,aACE,CAHN,GAKAD,oBAIM,KAJN,cAIM,CAHFY,UAGE,kBAFFZ,oBACwF,OADxF,EACwF;IADjFG,IAAI,EAAC,MAC4E;+DADvDG,aAAMO,gBAAaC,OACoC;IAAhFC,SAAS,EAAC,KAAsE;IAAhEC,QAAQ,EAAR,EAAgE;IAAvDf,KAAK,EAAC,cAAiD;IAAlCgB,WAAW,EAAC;EAAsB,CADxF;;EAAA,kBAAiCX,aAAMO;UAApB;MAEjB,CAJN,GAKAb,oBAIM,KAJN,cAIM,CAHFkB,UAGE,kBAFFlB,oBACkD,UADlD,EACkD;+DAD1BM,aAAMa,gBAAaL,OACO;IADLE,QAAQ,EAAR,EACK;IAA1CI,IAAI,EAAC,IAAqC;IAAhCnB,KAAK,EAAC;EAA0B,CADlD;;EAAA,kBAAwBK,aAAMa;UAApB;MAER,CAJN,GAMAnB,oBAIM,KAJN,cAIM,CAHFqB,WAGE,kBAFFrB,oBACmF,OADnF,EACmF;IAD5EG,IAAI,EAAC,UACuE;+DAD9CG,aAAMgB,aAAUR,OAC8B;IAA5EC,SAAS,EAAC,IAAkE;IAA7DC,QAAQ,EAAR,EAA6D;IAApDf,KAAK,EAAC,cAA8C;IAA/BgB,WAAW,EAAC;EAAmB,CADnF;;EAAA,kBAAqCX,aAAMgB;UAApB;MAErB,CAJN,GAMAtB,oBAGM,KAHN,eAGM,CAFFuB,WAEE,EADFvB,oBAA0E,QAA1E,EAA0E;IAAlEG,IAAI,EAAC,OAA6D;IAArDF,KAAK,EAAC,gBAA+C;IAA7BuB,OAAK,yCAAElB,2CAAF;EAAwB,CAA1E,EAA+D,IAA/D,CACE,CAHN,EAxBJ;;EAAA,CA6BI,CA9BN","names":["_createElementVNode","class","for","type","_createElementBlock","onSubmit","$setup","_hoisted_1","_hoisted_3","readonly","value","$props","_hoisted_6","board_SUBJECT","$event","maxlength","required","placeholder","_hoisted_8","board_CONTENT","rows","_hoisted_10","board_PASS","_hoisted_12","onClick"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\ex18_component_store\\component\\board\\board_reply.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"reply\">\r\n        <h1>MVC 게시판 - reply 페이지</h1>\r\n        <div class=\"form-group\">\r\n            <label for=\"board_name\">글쓴이</label>\r\n            <input readonly :value=\"parent_id\" type=\"text\" class=\"form-control\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"board_subject\">제목</label>\r\n            <input type=\"text\" v-model.lazy=\"board.board_SUBJECT\"\r\n                    maxlength=\"100\" required class=\"form-control\" placeholder=\"Enter board_subject\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"board_content\">내용</label>\r\n            <textarea v-model.lazy=\"board.board_CONTENT\" required\r\n                    rows=\"10\" class=\"form-control\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"board_pass\">비밀번호</label>\r\n            <input type=\"password\" v-model.lazy=\"board.board_PASS\"\r\n                   maxlength=\"30\" required class=\"form-control\" placeholder=\"Enter board_pass\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">답변</button>\r\n            <button type=\"reset\" class=\"btn btn-danger\" @click=\"goDetail\" >취소</button>\r\n        </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axios from \"../../axios/axiossetting.js\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nexport default {\r\n    props:{\r\n        parent_id:{\r\n            type:String,\r\n            required:true\r\n        }\r\n    },\r\n    emits:['parent_getSession'],\r\n    setup(props, context){\r\n        context.emit(\"parent_getSession\");\r\n\r\n        const board=ref({});\r\n        const router = useRouter();\r\n        const num = useRoute().params.num;\r\n\r\n        const getDetail = async ()=>{\r\n            try{\r\n                    console.log(\"num\"+num);\r\n                    //const res = await axios.get(`board/${num}`);\r\n                    const res = await axios.get('boards/'+num);\r\n                    console.log(res.data);\r\n                    if(board.value == null){\r\n                        console.log('null입니다.');\r\n                        router.push(\"{name:'404'}\")\r\n                        return;\r\n                    }else{\r\n                        board.value = res.data.board;\r\n                        board.value.board_PASS=\"\";\r\n                        board.value.board_CONTENT='';\r\n                        board.value.board_SUBJECT='Re:'+board.value.board_SUBJECT;\r\n                    }\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        getDetail();\r\n\r\n        const reply = async()=>{\r\n            let frm=new FormData();\r\n            frm.append(\"BOARD_SUBJECT\",board.value.board_SUBJECT);\r\n            frm.append(\"BOARD_CONTENT\",board.value.board_CONTENT);\r\n            frm.append(\"BOARD_PASS\",board.value.board_PASS);\r\n            frm.append(\"BOARD_NAME\",props.parent_id);\r\n            frm.append(\"BOARD_NUM\",num);\r\n            frm.append(\"BOARD_RE_REF\",board.value.board_RE_REF)\r\n            frm.append(\"BOARD_RE_LEV\",board.value.board_RE_LEV)\r\n            frm.append(\"BOARD_RE_SEQ\",board.value.board_RE_SEQ)\r\n\r\n            try{\r\n                    const res = await axios.post('boards/reply/new', frm)\r\n                    if(res.data==\"fail\"){\r\n                        console.log('답변 달기 실패입니다.');\r\n                    }else if(res.data==\"success\"){\r\n                        router.push({name : 'Board_List'});\r\n                    }\r\n           }catch(err){\r\n            console.log(\"여기는 오류\");\r\n            console.log(err);\r\n           }\r\n        }//reply\r\n\r\n        const goDetail=()=>{\r\n            router.push({name:'Board_Detail'})\r\n        }\r\n\r\n        return{\r\n                goDetail, reply, board\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    textarea{\r\n      resize: none;\r\n    }\r\n    \r\n    </style>\r\n    \r\n"]},"metadata":{},"sourceType":"module"}