{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c173339\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"parent\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 나는 부모입니다. \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_child = _resolveComponent(\"child\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 데이터 바인딩이 아닌 경우 \\\"message\\\"는 문자열입니다. \"), _createVNode(_component_child, {\n    val: \"message\"\n  }), _createCommentVNode(\" 동적 속성을 전달하기위한 콜론(:)을 사용합니다\\r\\n            여기서 사용된 message는 자바스크립트의 속성 입니다.\\r\\n            데이터 바이딩합니다.  \"), _createVNode(_component_child, {\n    val: $setup.message\n  }, null, 8\n  /* PROPS */\n  , [\"val\"]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.message = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.message]]), _createCommentVNode(\" 부모 컴포넌트에서 입력한 값이 자식 컴포넌트에 적용됩니다 \")]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;iDAAS;;;;;uBAApBC,oBAWM,KAXN,cAWM,aATJC,4DASI,EARJC,aAAsBC,gBAAtB,EAAsB;IAAfC,GAAG,EAAC;EAAW,CAAtB,CAQI,EANJH,+HAMI,EAHLC,aAAuBC,gBAAvB,EAAuB;IAAfC,GAAG,EAAEC;EAAU,CAAvB,EAAoB,IAApB,EAAoB;EAAA;EAApB,EAAoB,OAApB,CAGK,kBADLC,oBAAyB,OAAzB,EAAyB;+DAATD,iBAAOE;EAAE,CAAzB;;EAAA,kBAAgBF,iBACX,EADoBJ,wDACpB,CAXN","names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_child","val","$setup","_createElementVNode","$event"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex16_component\\_3_props\\parentView.vue"],"sourcesContent":["<template>\r\n    <div class=\"parent\">\r\n      나는 부모입니다.\r\n      <!-- 데이터 바인딩이 아닌 경우 \"message\"는 문자열입니다. -->\r\n      <child val=\"message\"/>\r\n  \r\n      <!-- 동적 속성을 전달하기위한 콜론(:)을 사용합니다\r\n            여기서 사용된 message는 자바스크립트의 속성 입니다.\r\n            데이터 바이딩합니다.  -->\r\n     <child :val=\"message\"/>\r\n\r\n     <input v-model=\"message\"><!-- 부모 컴포넌트에서 입력한 값이 자식 컴포넌트에 적용됩니다 -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n      import child from './childView.vue'\r\n  import {ref} from 'vue';\r\n  export default {\r\n      components:{\r\n          child\r\n      },\r\n      setup(){\r\n        const message=ref('초기값');\r\n        return{\r\n            message\r\n        }\r\n      }\r\n  \r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .parent{\r\n      background: cornsilk;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module"}