{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from '../../axios/axiossetting.js';\nexport default {\n  setup() {\n    const store = useStore();\n    const limit = ref(10);\n    let currentpage = 1;\n    let maxpage = 1;\n    const listcount = ref(0);\n    const list = ref([]);\n    const startnum = ref(0); //줄보기가 바뀌는 경우 getList() 호출합니다.\n\n    watch(limit, () => {\n      console.log(\"[board_list.vue : store.state.page] \" + store.state.page);\n      getList(store.state.page);\n    }); //페이지 네이션의 페이지 번호를 클릭한 경우 pageDo.vue에서 store.page값을 선택한 페이지\n    //그 때 getList() 호출합니다.\n\n    watch(() => store.state.page, () => {\n      console.log(\"[board_list.vue : store.state.page] \" + store.state.page);\n      getList(store.state.page);\n    });\n\n    const getList = async page => {\n      try {\n        const res = await axios.get(`board?page=${page}&limit=${limit.value}`);\n        list.value = res.data.boardlist;\n        listcount.value = res.data.listcount;\n        maxpage = res.data.maxpage;\n        currentpage = res.data.page;\n        startnum.value = listcount.value - (currentpage - 1) * limit.value;\n        console.log(\"page의 startnum.value = \" + startnum.value);\n        const pagelist = ref([]);\n\n        for (let i = res.data.startpage; i <= res.data.endpage; i++) {\n          pagelist.value.push(i);\n        } //pageDo.vue에서 사용하기 위해 store에 저장합니다.\n\n\n        const obj = {\n          maxpage,\n          currentpage,\n          pagelist\n        };\n        store.dispatch('store_obj', obj);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    return {\n      getList\n    };\n  } //setup\n\n\n};","map":{"version":3,"mappings":"AAoDA,SAASA,GAAT,EAAaC,KAAb,QAAyB,KAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,eAAe;EAEPC,KAAK,GAAE;IACH,MAAMC,KAAI,GAAIH,QAAQ,EAAtB;IACA,MAAMI,KAAI,GAAIN,GAAG,CAAC,EAAD,CAAjB;IACA,IAAIO,WAAU,GAAI,CAAlB;IACA,IAAIC,OAAM,GAAI,CAAd;IACA,MAAMC,SAAQ,GAAIT,GAAG,CAAC,CAAD,CAArB;IACA,MAAMU,IAAG,GAAIV,GAAG,CAAC,EAAD,CAAhB;IACA,MAAMW,QAAO,GAAIX,GAAG,CAAC,CAAD,CAApB,CAPG,CASH;;IACAC,KAAK,CAACK,KAAD,EAAQ,MAAI;MACbM,OAAO,CAACC,GAAR,CAAY,yCAAyCR,KAAK,CAACS,KAAN,CAAYC,IAAjE;MACAC,OAAO,CAACX,KAAK,CAACS,KAAN,CAAYC,IAAb,CAAP;IACH,CAHI,CAAL,CAVG,CAeH;IACA;;IACAd,KAAK,CAAC,MAAII,KAAK,CAACS,KAAN,CAAYC,IAAjB,EAAuB,MAAI;MAC5BH,OAAO,CAACC,GAAR,CAAY,yCAAyCR,KAAK,CAACS,KAAN,CAAYC,IAAjE;MACAC,OAAO,CAACX,KAAK,CAACS,KAAN,CAAYC,IAAb,CAAP;IACH,CAHI,CAAL;;IAKA,MAAMC,OAAM,GAAI,MAAOD,IAAP,IAAgB;MAE5B,IAAG;QACC,MAAME,GAAE,GAAI,MAAMd,KAAK,CAACe,GAAN,CAAW,cAAaH,IAAK,UAAST,KAAK,CAACa,KAAM,EAAlD,CAAlB;QAEAT,IAAI,CAACS,KAAL,GAAaF,GAAG,CAACG,IAAJ,CAASC,SAAtB;QACAZ,SAAS,CAACU,KAAV,GAAgBF,GAAG,CAACG,IAAJ,CAASX,SAAzB;QACAD,OAAO,GAAES,GAAG,CAACG,IAAJ,CAASZ,OAAlB;QACAD,WAAW,GAACU,GAAG,CAACG,IAAJ,CAASL,IAArB;QACAJ,QAAQ,CAACQ,KAAT,GAAeV,SAAS,CAACU,KAAV,GAAgB,CAACZ,WAAW,GAAC,CAAb,IAAgBD,KAAK,CAACa,KAArD;QACAP,OAAO,CAACC,GAAR,CAAY,4BAA2BF,QAAQ,CAACQ,KAAhD;QAEA,MAAMG,QAAO,GAAItB,GAAG,CAAC,EAAD,CAApB;;QACA,KAAK,IAAIuB,CAAC,GAACN,GAAG,CAACG,IAAJ,CAASI,SAApB,EAA+BD,CAAC,IAAGN,GAAG,CAACG,IAAJ,CAASK,OAA5C,EAAqDF,CAAC,EAAtD,EAAyD;UACrDD,QAAQ,CAACH,KAAT,CAAeO,IAAf,CAAoBH,CAApB;QACJ,CAbD,CAeC;;;QACA,MAAMI,GAAE,GAAI;UAACnB,OAAD;UAAUD,WAAV;UAAuBe;QAAvB,CAAZ;QACAjB,KAAK,CAACuB,QAAN,CAAe,WAAf,EAA4BD,GAA5B;MACH,CAlBD,CAkBC,OAAME,GAAN,EAAU;QACPjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ;MACJ;IACH,CAvBD;;IAyBA,OAAM;MACFb;IADE,CAAN;EAIR,CArDW,CAqDT;;;AArDS,CAAf","names":["ref","watch","useStore","axios","setup","store","limit","currentpage","maxpage","listcount","list","startnum","console","log","state","page","getList","res","get","value","data","boardlist","pagelist","i","startpage","endpage","push","obj","dispatch","err"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\component\\board\\board_list.vue"],"sourcesContent":["<template>\r\n    <!-- 게시글이 있는 경우 -->\r\n  <div v-if=\"listcount>0\">\r\n            <div class=\"rows\">\r\n            <span>줄보기</span>\r\n        <select class=\"form-control\" v-model=\"limit\">\r\n            <option value=\"1\">1</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"7\">7</option>\r\n            <option value=\"10\" selected>10</option>\r\n        </select>\r\n        </div>\r\n        <table class=\"table table-striped\">\r\n        <thead>\r\n        <tr>\r\n            <th colspan=\"3\">MVC 게시판 - list</th>\r\n            <th colspan=\"2\">\r\n                    <span>글 개수 : {{listcount}}</span>\r\n            </th>\r\n            </tr> \r\n            <tr>\r\n                <th><div>번호</div></th>\r\n                <th><div>제목</div></th>\r\n                <th><div>작성자</div></th>\r\n                <th><div>날짜</div></th>\r\n                <th><div>조회수</div></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"(item, index) in list\" :key=\"index\">\r\n            <td>{{startnum-index}}</td>\r\n            <td><router-link :to=\"{name:'Board_Detail', params:{num:`${item.board_NUM}`}}\">\r\n                        <span v-for=\"num in item.board_RE_LEV*2\" :key=\"num\">&nbsp;&nbsp;</span>\r\n                        <img v-if=\"item.board_RE_LEV>0\" src=\"../../assets/line.gif\">\r\n                        <span>{{item.board_SUBJECT}}</span>\r\n                    </router-link>\r\n            </td>\r\n            <td><div>{{item.board_NAME}}</div></td>\r\n            <td><div>{{item.board_DATE}}</div></td>\r\n            <td><div>{{item.board_READCOUNT}}</div></td>\r\n            </tr>\r\n            </tbody>\r\n            </table>\r\n        </div> \r\n        <!--게시글이 없는 경우 -->\r\n        <div v-else class=\"center\">\r\n                등록된 글이 없습니다.\r\n        </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref,watch} from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport axios from '../../axios/axiossetting.js';\r\nexport default {\r\n\r\n        setup(){\r\n            const store = useStore();\r\n            const limit = ref(10);\r\n            let currentpage = 1;\r\n            let maxpage = 1;\r\n            const listcount = ref(0);\r\n            const list = ref([]);\r\n            const startnum = ref(0)\r\n\r\n            //줄보기가 바뀌는 경우 getList() 호출합니다.\r\n            watch(limit, ()=>{\r\n                console.log(\"[board_list.vue : store.state.page] \" + store.state.page)\r\n                getList(store.state.page);\r\n            })\r\n\r\n            //페이지 네이션의 페이지 번호를 클릭한 경우 pageDo.vue에서 store.page값을 선택한 페이지\r\n            //그 때 getList() 호출합니다.\r\n            watch(()=>store.state.page, ()=>{\r\n                console.log(\"[board_list.vue : store.state.page] \" + store.state.page)\r\n                getList(store.state.page);\r\n            })\r\n\r\n            const getList = async (page) => {\r\n\r\n                try{\r\n                    const res = await axios.get(`board?page=${page}&limit=${limit.value}`);\r\n\r\n                    list.value = res.data.boardlist;\r\n                    listcount.value=res.data.listcount;\r\n                    maxpage= res.data.maxpage;\r\n                    currentpage=res.data.page;\r\n                    startnum.value=listcount.value-(currentpage-1)*limit.value;\r\n                    console.log(\"page의 startnum.value = \"+ startnum.value);\r\n\r\n                    const pagelist = ref([]);\r\n                    for (let i=res.data.startpage; i<= res.data.endpage; i++){\r\n                        pagelist.value.push(i);\r\n                    }\r\n\r\n                    //pageDo.vue에서 사용하기 위해 store에 저장합니다.\r\n                    const obj = {maxpage, currentpage, pagelist};\r\n                    store.dispatch('store_obj', obj);\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            };\r\n            \r\n            return{\r\n                getList, \r\n            }\r\n\r\n    } //setup\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}