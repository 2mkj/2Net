{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { ref } from 'vue'; //npm install vue-cookies\n\nimport cookies from 'vue-cookies'; //vue에서 쿠키를 사용하기 위한 cookies를 import합니다.\n\nimport axios from '../../axios/axiossetting.js';\nimport { off } from 'process';\nexport default {\n  emits: [\"parent_getSession\"],\n\n  setup(props, context) {\n    //부모 컴포넌트 App_1.vue에 있는 getSession을 호출합니다.\n    //<router-view @parent_getSession=\"getSession\" :parent_id=\"id\" />\n    console.log('member_login : setup');\n    context.emit(\"parent_getSession\", \"\");\n    const router = useRouter(); //useRouter()는 라우터 인스턴스를 반환합니다.\n\n    const join = () => {\n      router.push({\n        name: 'Join'\n      });\n    };\n\n    const Forgot = () => {\n      router.push({\n        name: 'Forgot'\n      });\n    };\n\n    const remember = ref(false);\n    const id = ref(\"\");\n    const password = ref(\"\");\n\n    const getCookie = () => {\n      //이름이 saveid인 쿠키를 가져옵니다.\n      const cookie_value = cookies.get(\"saveid\");\n      console.log(\"가져온 쿠키값=\" + cookie_value);\n\n      if (cookie_value != null) {\n        remember.value = true; //체크박스 체크합니다.\n\n        id.value = cookie_value; //쿠키에 저장된 아이디값 input에 나타납니다.\n      } else {\n        remember.value = false; //체크박스 해제합니다.\n      }\n    };\n\n    getCookie();\n\n    const loginProcess = async () => {\n      try {\n        const res = await axios.post(\"members\", {\n          id: id.value,\n          password: password.value\n        });\n        console.log(\"login.vue:res.data=\" + res.data);\n        const result = res.data;\n\n        if (result == -1) {\n          alert(\"아이디가 존재하지 않습니다.\");\n        } else if (result == 0) {\n          alert(\"비밀번호가 일치하지 않습니다.\");\n        } else if (result == 1) {\n          console.log(\"remember\" + remember.value);\n\n          if (remember.value) {\n            //체크박스 선택한 경우\n\n            /* \r\n                set(name, value, expire) : expire(만료일)을 갖는 name과 value를 가진 쿠키를 설정합니다.\r\n                  1s : 1초\r\n                  1h : 1시간 (60*60)\r\n                  1d : 1일 (24*60*60)\r\n                  1m : 1달\r\n                  new Date(2021,08,30).toUTCString() : 특정 시간\r\n                            (toUTCString() - 날짜를 UTC(협정 세계시) 형식으로 표현합니다.)\r\n            */\n            cookies.set(\"saveid\", id.value, \"1d\"); //1일 동안 유효한 쿠키를 설정합니다.\n            //cookies.set(\"saveid\", id.value, 24*60*60)\n          } else {\n            //체크박스 해제한 경우\n            cookies.remove(\"saveid\"); //쿠키 제거\n          }\n\n          router.push({\n            name: \"Board_List\"\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }; // loginProcess end\n\n\n    return {\n      Forgot,\n      join,\n      id,\n      password,\n      loginProcess,\n      remember\n    };\n  } //setup\n\n\n};","map":{"version":3,"mappings":"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","names":["useRouter","ref","cookies","axios","off","emits","setup","props","context","console","log","emit","router","join","push","name","Forgot","remember","id","password","getCookie","cookie_value","get","value","loginProcess","res","post","data","result","alert","set","remove","err"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\component\\member\\member_login.vue"],"sourcesContent":["<template>\r\n  <form class='mainform'>\r\n    <div class=\"login-container\">\r\n\t<form action=\"\" class=\"form-login\" @submit.prevent=\"loginProcess\">\r\n\t\t<ul class=\"login-nav\">\r\n\t\t\t<li class=\"login-nav__item active\">\r\n\t\t\t\t<a href=\"#\">로그인</a>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"login-nav__item\">\r\n\t\t\t\t<a href=\"#\" @click=\"join\">회원가입</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<label for=\"login-input-user\" class=\"login__label\">\r\n\t\t\t아이디\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"text\"  v-model=\"id\" name=\"id\" placeholder=\"Enter id\" required />\r\n\t\t<label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\t비밀번호\r\n\t\t</label>\r\n\t\t<input id=\"login-input-password\" class=\"login__input\" type=\"password\"  v-model=\"password\" name=\"password\" placeholder=\"Enter password\" required/>\r\n\t\t<label for=\"login-sign-up\" class=\"login__label--checkbox\">\r\n\t\t\t<input id=\"login-sign-up\" type=\"checkbox\" class=\"login__input--checkbox\" v-model=\"remember\" name=\"remember\" />\r\n\t\t\tRemember me\r\n\t\t</label>\r\n\t\t<button type=\"submit\" class=\"login__submit\">로그인</button>\r\n\t</form>\r\n\t<a href=\"#\" class=\"login__forgot\" @click=\"Forgot\">비밀번호를 잊으셨나요?</a>\r\n</div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport {useRouter} from 'vue-router'\r\nimport {ref} from 'vue';\r\n//npm install vue-cookies\r\nimport cookies from 'vue-cookies'; //vue에서 쿠키를 사용하기 위한 cookies를 import합니다.\r\nimport axios from '../../axios/axiossetting.js';\r\nimport { off } from 'process';\r\nexport default {\r\n  emits:[\"parent_getSession\"],\r\n  setup(props, context){\r\n    //부모 컴포넌트 App_1.vue에 있는 getSession을 호출합니다.\r\n    //<router-view @parent_getSession=\"getSession\" :parent_id=\"id\" />\r\n    console.log('member_login : setup')\r\n    context.emit(\"parent_getSession\", \"\");\r\n\r\n    const router = useRouter(); //useRouter()는 라우터 인스턴스를 반환합니다.\r\n    const join = () => {\r\n      router.push({\r\n        name:'Join'\r\n      });\r\n    }\r\n\tconst Forgot = () => {\r\n      router.push({\r\n        name:'Forgot'\r\n      });\r\n    }\r\n\r\n    const remember = ref(false);\r\n    const id =ref(\"\");\r\n    const password = ref(\"\");\r\n\r\n    const getCookie = () => {\r\n      //이름이 saveid인 쿠키를 가져옵니다.\r\n      const cookie_value = cookies.get(\"saveid\");\r\n      console.log(\"가져온 쿠키값=\"+cookie_value);\r\n      if(cookie_value!=null){\r\n        remember.value=true; //체크박스 체크합니다.\r\n        id.value = cookie_value; //쿠키에 저장된 아이디값 input에 나타납니다.\r\n      } else {\r\n        remember.value=false; //체크박스 해제합니다.\r\n      }\r\n    }\r\n    getCookie();\r\n\r\n    const loginProcess = async () => {\r\n      try{\r\n              const res = await axios.post(\"members\",{\r\n                id : id.value,\r\n                password: password.value\r\n              });\r\n                  console.log(\"login.vue:res.data=\"+res.data);\r\n                  const result = res.data;\r\n                  if(result == -1){\r\n                    alert(\"아이디가 존재하지 않습니다.\");\r\n                  }else if(result == 0){\r\n                    alert(\"비밀번호가 일치하지 않습니다.\");\r\n                  }else if(result == 1){\r\n                    \r\n                    console.log(\"remember\" + remember.value);\r\n                  \r\n                    if(remember.value){ //체크박스 선택한 경우\r\n                      /* \r\n                          set(name, value, expire) : expire(만료일)을 갖는 name과 value를 가진 쿠키를 설정합니다.\r\n                            1s : 1초\r\n                            1h : 1시간 (60*60)\r\n                            1d : 1일 (24*60*60)\r\n                            1m : 1달\r\n                            new Date(2021,08,30).toUTCString() : 특정 시간\r\n                                      (toUTCString() - 날짜를 UTC(협정 세계시) 형식으로 표현합니다.)\r\n                      */\r\n                    cookies.set(\"saveid\", id.value, \"1d\"); //1일 동안 유효한 쿠키를 설정합니다.\r\n                    //cookies.set(\"saveid\", id.value, 24*60*60)\r\n                    }else { //체크박스 해제한 경우\r\n                      cookies.remove(\"saveid\"); //쿠키 제거\r\n                    }\r\n\r\n                      router.push({\r\n                        name : \"Board_List\"\r\n                      });\r\n                  }\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      }; // loginProcess end\r\n\r\n    return {\r\n\t\tForgot, join, id, password, loginProcess, remember\r\n    };\r\n},//setup\r\n};\r\n</script>\r\n<style scoped>\r\n.mainform{\r\n  margin-bottom:150px;\r\n}\r\n.login-container {\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\tz-index: 0;\r\n\tmargin: 4rem auto 0;\r\n  padding: 5rem 4rem 0 4rem;\r\n\twidth: 100%;\r\n\tmax-width: 525px;\r\n\tmin-height: 680px;\r\n\tbackground-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/283591/login-background.jpg);\r\n\tbox-shadow: 0 50px 70px -20px rgba(0, 0, 0, 0.85);\r\n}\r\n\r\n.login-container:after {\r\n\tcontent: '';\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\tz-index: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tbackground-image: radial-gradient(ellipse at left bottom, rgba(22, 24, 47, 1) 0%,rgba(38, 20, 72, .9) 59%, rgba(17, 27, 75, .9) 100%);\r\n\tbox-shadow: 0 -20px 150px -20px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.form-login {\r\n\tposition: relative;\r\n\tz-index: 1;\r\n  padding-bottom: 4.5rem;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.25);\r\n}\r\n\r\n.login-nav {\r\n\tposition: relative;\r\n\tpadding: 0;\r\n\tmargin: 0 0 6em 1rem;\r\n}\r\n\r\n.login-nav__item {\r\n\tlist-style: none;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.login-nav__item + .login-nav__item {\r\n\tmargin-left: 2.25rem;\r\n}\r\n\r\n.login-nav__item a {\r\n\tposition: relative;\r\n\tcolor: rgba(255, 255, 255, 0.5);\r\n\ttext-decoration: none;\r\n\ttext-transform: uppercase;\r\n\tfont-weight: 500;\r\n\tfont-size: 1.25rem;\r\n\tpadding-bottom: .5rem;\r\n\ttransition: .20s all ease;\r\n}\r\n\r\n.login-nav__item.active a,\r\n.login-nav__item a:hover{\r\n\tcolor: #ffffff;\r\n\ttransition: .15s all ease;\r\n}\r\n\r\n.login-nav__item a:after {\r\n\tcontent: '';\r\n  display: inline-block;\r\n  height: 10px;\r\n  background-color: rgb(255, 255, 255);\r\n  position: absolute;\r\n  right: 100%;\r\n  bottom: -1px;\r\n  left: 0;\r\n  border-radius: 50%;\r\n  transition: .15s all ease;\r\n}\r\n\r\n.login-nav__item a:hover:after,\r\n.login-nav__item.active a:after{\r\n\tbackground-color: rgb(17, 97, 237);\r\n\theight: 2px;\r\n\tright: 0;\r\n\tbottom: 2px;\r\n\tborder-radius: 0;\r\n\ttransition: .20s all ease;\r\n}\r\n.login__label {\r\n\tdisplay: block;\r\n\tpadding-left: 1rem;\r\n}\r\n\r\n.login__label,\r\n.login__label--checkbox {\r\n\tcolor: rgba(255, 255, 255, 0.5);\r\n\ttext-transform: uppercase;\r\n\tfont-size: .75rem;\r\n\tmargin-bottom: 1rem;\r\n}\r\n\r\n.login__label--checkbox {\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\tpadding-left: 1.5rem;\r\n\tmargin-top: 2rem;\r\n\tmargin-left: 1rem;\r\n\tcolor: #ffffff;\r\n\tfont-size: .75rem;\r\n\ttext-transform: inherit;\r\n}\r\n\r\n.login__input {\r\n\tcolor: white;\r\n\tfont-size: 1.15rem;\r\n\twidth: 100%;\r\n\tpadding: .5rem 1rem;\r\n\tborder: 2px solid transparent;\r\n\toutline: none;\r\n\tborder-radius: 1.5rem;\r\n\tbackground-color: rgba(255, 255, 255, 0.25);\r\n\tletter-spacing: 1px;\r\n}\r\n\r\n.login__input:hover,\r\n.login__input:focus{\r\n\tcolor: white;\r\n\tborder: 2px solid rgba(255, 255, 255, 0.5);\r\n\tbackground-color: transparent;\r\n}\r\n\r\n.login__input + .login__label {\r\n\tmargin-top: 1.5rem;\r\n}\r\n\r\n.login__input--checkbox {\r\n\tposition: absolute;\r\n\ttop: .1rem;\r\n\tleft: 0;\r\n\tmargin: 0;\r\n}\r\n\r\n.login__submit {\r\n\tcolor: #ffffff;\r\n\tfont-size: 1rem;\r\n\tfont-family: 'Montserrat', sans-serif;\r\n\ttext-transform: uppercase;\r\n\tletter-spacing: 1px;\r\n\tmargin-top: 1rem;\r\n\tpadding: .75rem;\r\n\tborder-radius: 2rem;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tbackground-color: rgba(17, 97, 237, .75);\r\n\tborder: none;\r\n\tcursor: pointer;\r\n}\r\n\r\n.login__submit:hover {\r\n\tbackground-color: rgba(17, 97, 237, 1);\r\n}\r\n\r\n.login__forgot {\r\n\tdisplay: block;\r\n\tmargin-top: 3rem;\r\n\ttext-align: center;\r\n\tcolor: rgba(255, 255, 255, 0.75);\r\n\tfont-size: .75rem;\r\n\ttext-decoration: none;\r\n\tposition: relative;\r\n\tz-index: 1;\r\n}\r\n\r\n.login__forgot:hover {\r\n\tcolor: rgb(17, 97, 237);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}