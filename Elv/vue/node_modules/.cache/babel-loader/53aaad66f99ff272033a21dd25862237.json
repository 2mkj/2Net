{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"NoticeList.vue 입니다\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"row\"\n};\nconst _hoisted_5 = {\n  class: \"input-group\"\n};\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = [\"placeholder\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\",\n  type: \"submit\"\n}, \"검색\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"table table-striped\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", {\n  colspan: \"3\"\n}, \" 공지사항 정보 \", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = {\n  colspan: \"2\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"번호\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"제목\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"글쓴이\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"작성일\")]), /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"삭제\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"center\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"min-height\": \"500px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \"공지사항이 없습니다.\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = [_hoisted_15];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 공지사항이 있을때\"), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.search && $setup.search(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"viewcount\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.search_field = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $setup.change_placeholder())\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.option_data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: item.value\n    }, _toDisplayString(item.label), 9\n    /* TEXT, PROPS */\n    , _hoisted_6);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelSelect, $setup.search_field, void 0, {\n    lazy: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: $setup.placeholder_message,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.search_word = $event),\n    ref: \"f2\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_7), [[_vModelText, $setup.search_word, void 0, {\n    lazy: true\n  }]]), _hoisted_8])], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"table\", _hoisted_9, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_10, _createElementVNode(\"th\", _hoisted_11, [_createElementVNode(\"span\", null, \"공지사항 개수 : \" + _toDisplayString($setup.listcount), 1\n  /* TEXT */\n  )])]), _hoisted_12]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.list, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createCommentVNode(\"번호\"), _createTextVNode(_toDisplayString($setup.startnum - index), 1\n    /* TEXT */\n    )]), _createElementVNode(\"td\", null, [_createCommentVNode(\"제목\"), _createVNode(_component_router_link, {\n      to: {\n        name: 'Notice_Info',\n        params: {\n          notice_id: `${item.notice_ID}`\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.notice_SUBJECT), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"])]), _createElementVNode(\"td\", null, [_createCommentVNode(\"글쓴이\"), _createTextVNode(_toDisplayString(item.notice_WRITER), 1\n    /* TEXT */\n    )]), _createElementVNode(\"td\", null, [_createCommentVNode(\"작성일\"), _createTextVNode(_toDisplayString(item.notice_DATE), 1\n    /* TEXT */\n    )]), _createElementVNode(\"td\", null, [_createCommentVNode(\"삭제버튼\"), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $setup.member_delete(item.notice_ID)\n    }, \" 삭제 \", 8\n    /* PROPS */\n    , _hoisted_13)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $setup.listcount > 0]]), _createCommentVNode(\"공지사항이 없을때\"), _withDirectives(_createElementVNode(\"div\", _hoisted_14, _hoisted_16, 512\n  /* NEED_PATCH */\n  ), [[_vShow, $setup.listcount == 0]])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","type","colspan","style","_hoisted_15","_hoisted_1","_hoisted_2","_createCommentVNode","onSubmit","$setup","id","$event","onChange","_createElementBlock","_Fragment","_renderList","item","index","key","value","label","_hoisted_6","placeholder","ref","_hoisted_8","_hoisted_10","_toDisplayString","_hoisted_12","_createVNode","_component_router_link","to","name","params","notice_id","notice_ID","notice_SUBJECT","notice_WRITER","notice_DATE","onClick","_hoisted_13","_hoisted_16"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\component\\Notice\\NoticeList.vue"],"sourcesContent":["<template>\r\n <h1>NoticeList.vue 입니다</h1><hr>\r\n <div class=\"container\">\r\n  <div class=\"row\">\r\n    <!-- 공지사항이 있을때-->\r\n    <div v-show=\"listcount>0\">\r\n    \r\n      <form @submit.prevent=\"search\">\r\n        <div class=\"input-group\">\r\n            <select id=\"viewcount\" v-model.lazy=\"search_field\" @change=\"change_placeholder()\">\r\n                <option v-for=\"(item, index) in option_data\" :key=\"index\" :value=\"item.value\">\r\n                  {{item.label}}\r\n                </option>\r\n            </select>\r\n            <input type=\"text\" class=\"form-control\" :placeholder=\"placeholder_message\" v-model.lazy=\"search_word\" ref=\"f2\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">검색</button>\r\n        </div>\r\n    </form>\r\n\r\n\r\n    <table class=\"table table-striped\">\r\n     <thead>\r\n      <tr>\r\n        <th colspan=\"3\">\r\n          공지사항 정보\r\n        </th>\r\n        <th colspan=\"2\">\r\n          <span>공지사항 개수 : {{listcount}}</span>\r\n        </th>\r\n      </tr> \r\n\r\n      <tr>\r\n        <th><div>번호</div></th>\r\n    \t  <th><div>제목</div></th>\r\n    \t  <th><div>글쓴이</div></th>\r\n        <th><div>작성일</div></th>\r\n    \t  <th><div>삭제</div></th>\r\n      </tr>\r\n    </thead>\r\n\r\n\r\n    <tbody>\r\n     <tr v-for=\"(item, index) in list\" :key=\"index\">\r\n\t     <td> <!--번호-->\r\n        {{startnum-index}}\r\n       </td>\r\n\r\n\r\n\t     <td> <!--제목-->\r\n        <router-link :to=\"{name:'Notice_Info',params:{notice_id:`${item.notice_ID}`}}\">\r\n          {{item.notice_SUBJECT}}\r\n        </router-link>\r\n       </td>\r\n\t \r\n       <td> <!--글쓴이-->\r\n        {{item.notice_WRITER}}\r\n       </td>\r\n\r\n       <td> <!--작성일-->\r\n        {{item.notice_DATE}}\r\n       </td>\r\n      \r\n        <td> <!--삭제버튼-->\r\n          <button class=\"btn btn-danger btn-sm\" @click=\"member_delete(item.notice_ID)\">\r\n            삭제\r\n          </button>\r\n        </td>\r\n\r\n\t   </tr>\r\n\r\n    </tbody>\r\n\r\n   </table>\r\n    </div>\r\n\r\n    <!--공지사항이 없을때-->\r\n  <div v-show=\"listcount==0\" class=\"center\">\r\n\r\n    <div style=\"min-height: 500px\">\r\n      <h4>공지사항이 없습니다.</h4>\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref,watch} from 'vue';\r\nimport axios from '../../axios/axiossetting.js';\r\nimport { useStore } from 'vuex';\r\nexport default {\r\n    setup(){\r\n        const store = useStore();\r\n        let option_data = ref([]);\r\n        option_data.value=[\r\n            {value:'I', label:'아이디'},\r\n            {value: 'S', label:'제목'}\r\n        ];\r\n        const limit= ref(10);\r\n        let currentpage=1;\r\n        let maxpage = 1;\r\n        const list = ref([]);\r\n        const startnum = ref(0);\r\n        const listcount = ref(0);\r\n        const search_field=ref('S');\r\n        const placeholder_message=ref('제목을 입력하세요');\r\n        console.log(\"search_field2=\"+search_field.value)\r\n        const search_word=ref('');\r\n        const f2=ref(null);\r\n        const search=()=>{\r\n            console.log(\"search하러 가요\");\r\n            if(search_word.value==''){\r\n                alert('검색어를 입력하세요');\r\n                f2.value.focus();\r\n                return;\r\n            }\r\n            getList(currentpage);\r\n        }\r\n\r\n        const change_placeholder=()=>{\r\n            option_data.value.filter(item=>{\r\n                if(item.value===search_field.value){\r\n                    placeholder_message.value=item.label+'(를)을 입력하세요';\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        const member_delete = async (id)=>{\r\n            const answer = confirm(\"정말 삭제하시겠습니까?\");\r\n            if(answer){\r\n                try{\r\n                    const res = await axios.delete(`members/${id}`)\r\n                    console.log(res.data)\r\n                    if(res.data==0){\r\n                        alert('삭제 실패 입니다.')\r\n                    }else{\r\n                        alert('삭제 성공');\r\n                        getList(1);\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n\r\n        const getList = async (page)=>{\r\n            try{\r\n                const res = await axios.get(`notices?page=${page}&limit=${limit.value}&search_field=${search_field.value}&search_word=${search_word.value}`);\r\n                console.log(\"noticelist : \"+res.data)\r\n                list.value=res.data.noticelist;\r\n                listcount.value=res.data.listcount;\r\n                maxpage = res.data.maxpage;\r\n                currentpage=res.data.page;\r\n                search_field.value=res.data.search_field;\r\n                search_word.value=res.data.search_word;\r\n                startnum.value=listcount.value-(currentpage-1)*limit.value;\r\n\r\n                const pagelist = ref([]);\r\n                for(let i=res.data.startpage; i<=res.data.endpage;i++){\r\n                    pagelist.value.push(i);\r\n                }\r\n\r\n                const obj = {maxpage, currentpage, pagelist};\r\n                store.dispatch('store_obj',obj);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        getList(1);\r\n\r\n        watch(limit, ()=>{\r\n            store.dispatch('store_limit',limit.value);\r\n            console.log(\"(limit)member_list_vue - store.state.page] \"+store.state.page)\r\n            getList(store.state.page);\r\n        })\r\n\r\n        //페이지 네이션에서 페이지 번호를 클릭한 경우 store.state.page의 값이 변경됩니다.\r\n        //store.state.page에 해당하는 목록을 가져옵니다.\r\n\r\n        watch(()=>store.state.page, ()=>{\r\n            getList(store.state.page);\r\n        })\r\n\r\n        return{\r\n            limit, search, search_field, search_word, listcount, list, startnum,\r\n            placeholder_message, change_placeholder, member_delete, option_data,\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}