{"ast":null,"code":"import { ref, watch } from 'vue';\nimport axios from '../../axios/axiossetting.js';\nimport { useStore } from 'vuex';\nexport default {\n  setup() {\n    const store = useStore();\n    let option_data = ref([]);\n    option_data.value = [{\n      value: 'I',\n      label: '아이디'\n    }, {\n      value: 'S',\n      label: '제목'\n    }];\n    const limit = ref(10);\n    let currentpage = 1;\n    let maxpage = 1;\n    const list = ref([]);\n    const startnum = ref(0);\n    const listcount = ref(0);\n    const search_field = ref('S');\n    const placeholder_message = ref('제목을 입력하세요');\n    console.log(\"search_field2=\" + search_field.value);\n    const search_word = ref('');\n    const f2 = ref(null);\n\n    const search = () => {\n      console.log(\"search하러 가요\");\n\n      if (search_word.value == '') {\n        alert('검색어를 입력하세요');\n        f2.value.focus();\n        return;\n      }\n\n      getList(currentpage);\n    };\n\n    const change_placeholder = () => {\n      option_data.value.filter(item => {\n        if (item.value === search_field.value) {\n          placeholder_message.value = item.label + '(를)을 입력하세요';\n          return;\n        }\n      });\n    };\n\n    const member_delete = async id => {\n      const answer = confirm(\"정말 삭제하시겠습니까?\");\n\n      if (answer) {\n        try {\n          const res = await axios.delete(`members/${id}`);\n          console.log(res.data);\n\n          if (res.data == 0) {\n            alert('삭제 실패 입니다.');\n          } else {\n            alert('삭제 성공');\n            getList(1);\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    const getList = async page => {\n      try {\n        const res = await axios.get(`notices?page=${page}&limit=${limit.value}&search_field=${search_field.value}&search_word=${search_word.value}`);\n        console.log(\"noticelist : \" + res.data);\n        list.value = res.data.noticelist;\n        listcount.value = res.data.listcount;\n        maxpage = res.data.maxpage;\n        currentpage = res.data.page;\n        search_field.value = res.data.search_field;\n        search_word.value = res.data.search_word;\n        startnum.value = listcount.value - (currentpage - 1) * limit.value;\n        const pagelist = ref([]);\n\n        for (let i = res.data.startpage; i <= res.data.endpage; i++) {\n          pagelist.value.push(i);\n        }\n\n        const obj = {\n          maxpage,\n          currentpage,\n          pagelist\n        };\n        store.dispatch('store_obj', obj);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getList(1);\n    watch(limit, () => {\n      store.dispatch('store_limit', limit.value);\n      console.log(\"(limit)member_list_vue - store.state.page] \" + store.state.page);\n      getList(store.state.page);\n    }); //페이지 네이션에서 페이지 번호를 클릭한 경우 store.state.page의 값이 변경됩니다.\n    //store.state.page에 해당하는 목록을 가져옵니다.\n\n    watch(() => store.state.page, () => {\n      getList(store.state.page);\n    });\n    return {\n      limit,\n      search,\n      search_field,\n      search_word,\n      listcount,\n      list,\n      startnum,\n      placeholder_message,\n      change_placeholder,\n      member_delete,\n      option_data\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","watch","axios","useStore","setup","store","option_data","value","label","limit","currentpage","maxpage","list","startnum","listcount","search_field","placeholder_message","console","log","search_word","f2","search","alert","focus","getList","change_placeholder","filter","item","member_delete","id","answer","confirm","res","delete","data","err","page","get","noticelist","pagelist","i","startpage","endpage","push","obj","dispatch","state"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\component\\Notice\\NoticeList.vue"],"sourcesContent":["<template>\r\n <h1>NoticeList.vue 입니다</h1><hr>\r\n <div class=\"container\">\r\n  <div class=\"row\">\r\n    <!-- 공지사항이 있을때-->\r\n    <div v-show=\"listcount>0\">\r\n    \r\n      <form @submit.prevent=\"search\">\r\n        <div class=\"input-group\">\r\n            <select id=\"viewcount\" v-model.lazy=\"search_field\" @change=\"change_placeholder()\">\r\n                <option v-for=\"(item, index) in option_data\" :key=\"index\" :value=\"item.value\">\r\n                  {{item.label}}\r\n                </option>\r\n            </select>\r\n            <input type=\"text\" class=\"form-control\" :placeholder=\"placeholder_message\" v-model.lazy=\"search_word\" ref=\"f2\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">검색</button>\r\n        </div>\r\n    </form>\r\n\r\n\r\n    <table class=\"table table-striped\">\r\n     <thead>\r\n      <tr>\r\n        <th colspan=\"3\">\r\n          공지사항 정보\r\n        </th>\r\n        <th colspan=\"2\">\r\n          <span>공지사항 개수 : {{listcount}}</span>\r\n        </th>\r\n      </tr> \r\n\r\n      <tr>\r\n        <th><div>번호</div></th>\r\n    \t  <th><div>제목</div></th>\r\n    \t  <th><div>글쓴이</div></th>\r\n        <th><div>작성일</div></th>\r\n    \t  <th><div>삭제</div></th>\r\n      </tr>\r\n    </thead>\r\n\r\n\r\n    <tbody>\r\n     <tr v-for=\"(item, index) in list\" :key=\"index\">\r\n\t     <td> <!--번호-->\r\n        {{startnum-index}}\r\n       </td>\r\n\r\n\r\n\t     <td> <!--제목-->\r\n        <router-link :to=\"{name:'Notice_Info',params:{notice_id:`${item.notice_ID}`}}\">\r\n          {{item.notice_SUBJECT}}\r\n        </router-link>\r\n       </td>\r\n\t \r\n       <td> <!--글쓴이-->\r\n        {{item.notice_WRITER}}\r\n       </td>\r\n\r\n       <td> <!--작성일-->\r\n        {{item.notice_DATE}}\r\n       </td>\r\n      \r\n        <td> <!--삭제버튼-->\r\n          <button class=\"btn btn-danger btn-sm\" @click=\"member_delete(item.notice_ID)\">\r\n            삭제\r\n          </button>\r\n        </td>\r\n\r\n\t   </tr>\r\n\r\n    </tbody>\r\n\r\n   </table>\r\n    </div>\r\n\r\n    <!--공지사항이 없을때-->\r\n  <div v-show=\"listcount==0\" class=\"center\">\r\n\r\n    <div style=\"min-height: 500px\">\r\n      <h4>공지사항이 없습니다.</h4>\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref,watch} from 'vue';\r\nimport axios from '../../axios/axiossetting.js';\r\nimport { useStore } from 'vuex';\r\nexport default {\r\n    setup(){\r\n        const store = useStore();\r\n        let option_data = ref([]);\r\n        option_data.value=[\r\n            {value:'I', label:'아이디'},\r\n            {value: 'S', label:'제목'}\r\n        ];\r\n        const limit= ref(10);\r\n        let currentpage=1;\r\n        let maxpage = 1;\r\n        const list = ref([]);\r\n        const startnum = ref(0);\r\n        const listcount = ref(0);\r\n        const search_field=ref('S');\r\n        const placeholder_message=ref('제목을 입력하세요');\r\n        console.log(\"search_field2=\"+search_field.value)\r\n        const search_word=ref('');\r\n        const f2=ref(null);\r\n        const search=()=>{\r\n            console.log(\"search하러 가요\");\r\n            if(search_word.value==''){\r\n                alert('검색어를 입력하세요');\r\n                f2.value.focus();\r\n                return;\r\n            }\r\n            getList(currentpage);\r\n        }\r\n\r\n        const change_placeholder=()=>{\r\n            option_data.value.filter(item=>{\r\n                if(item.value===search_field.value){\r\n                    placeholder_message.value=item.label+'(를)을 입력하세요';\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        const member_delete = async (id)=>{\r\n            const answer = confirm(\"정말 삭제하시겠습니까?\");\r\n            if(answer){\r\n                try{\r\n                    const res = await axios.delete(`members/${id}`)\r\n                    console.log(res.data)\r\n                    if(res.data==0){\r\n                        alert('삭제 실패 입니다.')\r\n                    }else{\r\n                        alert('삭제 성공');\r\n                        getList(1);\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n\r\n        const getList = async (page)=>{\r\n            try{\r\n                const res = await axios.get(`notices?page=${page}&limit=${limit.value}&search_field=${search_field.value}&search_word=${search_word.value}`);\r\n                console.log(\"noticelist : \"+res.data)\r\n                list.value=res.data.noticelist;\r\n                listcount.value=res.data.listcount;\r\n                maxpage = res.data.maxpage;\r\n                currentpage=res.data.page;\r\n                search_field.value=res.data.search_field;\r\n                search_word.value=res.data.search_word;\r\n                startnum.value=listcount.value-(currentpage-1)*limit.value;\r\n\r\n                const pagelist = ref([]);\r\n                for(let i=res.data.startpage; i<=res.data.endpage;i++){\r\n                    pagelist.value.push(i);\r\n                }\r\n\r\n                const obj = {maxpage, currentpage, pagelist};\r\n                store.dispatch('store_obj',obj);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        getList(1);\r\n\r\n        watch(limit, ()=>{\r\n            store.dispatch('store_limit',limit.value);\r\n            console.log(\"(limit)member_list_vue - store.state.page] \"+store.state.page)\r\n            getList(store.state.page);\r\n        })\r\n\r\n        //페이지 네이션에서 페이지 번호를 클릭한 경우 store.state.page의 값이 변경됩니다.\r\n        //store.state.page에 해당하는 목록을 가져옵니다.\r\n\r\n        watch(()=>store.state.page, ()=>{\r\n            getList(store.state.page);\r\n        })\r\n\r\n        return{\r\n            limit, search, search_field, search_word, listcount, list, startnum,\r\n            placeholder_message, change_placeholder, member_delete, option_data,\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}