{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"../../axios/axiossetting.js\";\nimport { useRoute, useRouter } from \"vue-router\";\nexport default {\n  props: {\n    parent_id: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['parent_getSession'],\n\n  setup(props, context) {\n    context.emit(\"parent_getSession\");\n    const board = ref({});\n    const router = useRouter();\n    const num = useRoute().params.num;\n\n    const getDetail = async () => {\n      try {\n        console.log(\"num\" + num); //const res = await axios.get(`board/${num}`);\n\n        const res = await axios.get('boards/' + num);\n        console.log(res.data);\n\n        if (board.value == null) {\n          console.log('null입니다.');\n          router.push(\"{name:'404'}\");\n          return;\n        } else {\n          board.value = res.data.board;\n          board.value.board_PASS = \"\";\n          board.value.board_CONTENT = '';\n          board.value.board_SUBJECT = 'Re:' + board.value.board_SUBJECT;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getDetail();\n\n    const reply = async () => {\n      let frm = new FormData();\n      frm.append(\"BOARD_SUBJECT\", board.value.board_SUBJECT);\n      frm.append(\"BOARD_CONTENT\", board.value.board_CONTENT);\n      frm.append(\"BOARD_PASS\", board.value.board_PASS);\n      frm.append(\"BOARD_NAME\", props.parent_id);\n      frm.append(\"BOARD_NUM\", num);\n      frm.append(\"BOARD_RE_REF\", board.value.board_RE_REF);\n      frm.append(\"BOARD_RE_LEV\", board.value.board_RE_LEV);\n      frm.append(\"BOARD_RE_SEQ\", board.value.board_RE_SEQ);\n\n      try {\n        const res = await axios.post('boards/reply/new', frm);\n\n        if (res.data == \"fail\") {\n          console.log('답변 달기 실패입니다.');\n        } else if (res.data == \"success\") {\n          router.push({\n            name: 'Board_List'\n          });\n        }\n      } catch (err) {\n        console.log(\"여기는 오류\");\n        console.log(err);\n      }\n    }; //reply\n\n\n    const goDetail = () => {\n      router.push({\n        name: 'Board_Detail'\n      });\n    };\n\n    return {\n      goDetail,\n      reply,\n      board\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRoute","useRouter","props","parent_id","type","String","required","emits","setup","context","emit","board","router","num","params","getDetail","console","log","res","get","data","value","push","board_PASS","board_CONTENT","board_SUBJECT","err","reply","frm","FormData","append","board_RE_REF","board_RE_LEV","board_RE_SEQ","post","name","goDetail"],"sourceRoot":"","sources":["C:\\Users\\sijun\\Documents\\카카오톡 받은 파일\\simple_vue_project\\Elv\\vue\\src\\component\\board\\board_reply.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"reply\">\r\n        <h1>MVC 게시판 - reply 페이지</h1>\r\n        <div class=\"form-group\">\r\n            <label for=\"board_name\">글쓴이</label>\r\n            <input readonly :value=\"parent_id\" type=\"text\" class=\"form-control\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"board_subject\">제목</label>\r\n            <input type=\"text\" v-model.lazy=\"board.board_SUBJECT\"\r\n                    maxlength=\"100\" required class=\"form-control\" placeholder=\"Enter board_subject\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"board_content\">내용</label>\r\n            <textarea v-model.lazy=\"board.board_CONTENT\" required\r\n                    rows=\"10\" class=\"form-control\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"board_pass\">비밀번호</label>\r\n            <input type=\"password\" v-model.lazy=\"board.board_PASS\"\r\n                   maxlength=\"30\" required class=\"form-control\" placeholder=\"Enter board_pass\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">답변</button>\r\n            <button type=\"reset\" class=\"btn btn-danger\" @click=\"goDetail\" >취소</button>\r\n        </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axios from \"../../axios/axiossetting.js\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nexport default {\r\n    props:{\r\n        parent_id:{\r\n            type:String,\r\n            required:true\r\n        }\r\n    },\r\n    emits:['parent_getSession'],\r\n    setup(props, context){\r\n        context.emit(\"parent_getSession\");\r\n\r\n        const board=ref({});\r\n        const router = useRouter();\r\n        const num = useRoute().params.num;\r\n\r\n        const getDetail = async ()=>{\r\n            try{\r\n                    console.log(\"num\"+num);\r\n                    //const res = await axios.get(`board/${num}`);\r\n                    const res = await axios.get('boards/'+num);\r\n                    console.log(res.data);\r\n                    if(board.value == null){\r\n                        console.log('null입니다.');\r\n                        router.push(\"{name:'404'}\")\r\n                        return;\r\n                    }else{\r\n                        board.value = res.data.board;\r\n                        board.value.board_PASS=\"\";\r\n                        board.value.board_CONTENT='';\r\n                        board.value.board_SUBJECT='Re:'+board.value.board_SUBJECT;\r\n                    }\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        getDetail();\r\n\r\n        const reply = async()=>{\r\n            let frm=new FormData();\r\n            frm.append(\"BOARD_SUBJECT\",board.value.board_SUBJECT);\r\n            frm.append(\"BOARD_CONTENT\",board.value.board_CONTENT);\r\n            frm.append(\"BOARD_PASS\",board.value.board_PASS);\r\n            frm.append(\"BOARD_NAME\",props.parent_id);\r\n            frm.append(\"BOARD_NUM\",num);\r\n            frm.append(\"BOARD_RE_REF\",board.value.board_RE_REF)\r\n            frm.append(\"BOARD_RE_LEV\",board.value.board_RE_LEV)\r\n            frm.append(\"BOARD_RE_SEQ\",board.value.board_RE_SEQ)\r\n\r\n            try{\r\n                    const res = await axios.post('boards/reply/new', frm)\r\n                    if(res.data==\"fail\"){\r\n                        console.log('답변 달기 실패입니다.');\r\n                    }else if(res.data==\"success\"){\r\n                        router.push({name : 'Board_List'});\r\n                    }\r\n           }catch(err){\r\n            console.log(\"여기는 오류\");\r\n            console.log(err);\r\n           }\r\n        }//reply\r\n\r\n        const goDetail=()=>{\r\n            router.push({name:'Board_Detail'})\r\n        }\r\n\r\n        return{\r\n                goDetail, reply, board\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    textarea{\r\n      resize: none;\r\n    }\r\n    \r\n    </style>\r\n    \r\n"]},"metadata":{},"sourceType":"module"}