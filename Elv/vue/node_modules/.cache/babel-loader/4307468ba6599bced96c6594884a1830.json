{"ast":null,"code":"export default {\n  setup() {\n    //케밥 표기법 - HTML, CSS에서 복수 단어 사이를 하이픈(-)으로 연결해서 사용하는 방식\n    //const color_style = {'color' : 'orange', 'font-size' : '30px'};\n    //카멜 표기법 - 복수 단어 사이의 하이픈을 없애고 두 번째 이후 단어의 시작은 대문자로 표기하는 방식\n    const color_style = {\n      'color': 'orange',\n      'fontSize': '30px'\n    };\n    const color = prompt('바꿀 색상을 입력하세요', 'blue');\n    return {\n      color_style,\n      colorChange: color\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,eAAe;EACXA,KAAK,GAAE;IAEH;IACA;IAEA;IACA,MAAMC,WAAU,GAAI;MAAC,SAAU,QAAX;MAAqB,YAAa;IAAlC,CAApB;IAEA,MAAMC,KAAI,GAAIC,MAAM,CAAC,cAAD,EAAgB,MAAhB,CAApB;IACA,OAAM;MACDF,WADC;MAEDG,WAAU,EAAIF;IAFb,CAAN;EAIJ;;AAdW,CAAf","names":["setup","color_style","color","prompt","colorChange"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex03_v_bind\\App2_style.vue"],"sourcesContent":["<template>\r\n    <!--\r\n        1. v-로 시작하는 속성은 디렉티브라고 하며 주로 단방향 데이터 바인딩과 관련된 처리를 실시합니다.,\r\n            중요한 것은 디렉티브의 값이 자바스크립트에서 리턴한 프로퍼티를 사용합니다\r\n        \r\n        2, 다음은 태그의 속성을 데이터로 지정하고 싶을 때 사용하는 v-bind 입니다.\r\n            형식)\r\n                (1) <태그명 v-bind:태그속성=\"프로퍼티\"></태그명>\r\n                (2) <태그명 :태그속성=\"프로퍼티명\"></태그명>\r\n\r\n        3. 속성 style 바인딩\r\n                (1) 프로퍼티가 객체인 경우\r\n                     형식) <li :style=\"프로퍼티명\">\r\n                     사용예) <li :style=\"color_style\">\r\n\r\n                (2) 프로퍼티가 스트링인 경우\r\n                     형식) <li :style=\"{style속성 : 프로퍼티명}\">\r\n                     사용예) <li :style=\"{color : color_style}\">\r\n    -->\r\n<div class=\"container\">\r\n    <ol>\r\n        <li></li>\r\n    </ol>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    setup(){\r\n\r\n        //케밥 표기법 - HTML, CSS에서 복수 단어 사이를 하이픈(-)으로 연결해서 사용하는 방식\r\n        //const color_style = {'color' : 'orange', 'font-size' : '30px'};\r\n\r\n        //카멜 표기법 - 복수 단어 사이의 하이픈을 없애고 두 번째 이후 단어의 시작은 대문자로 표기하는 방식\r\n        const color_style = {'color' : 'orange', 'fontSize' : '30px'};\r\n\r\n        const color = prompt('바꿀 색상을 입력하세요','blue');\r\n        return{\r\n             color_style,\r\n             colorChange : color\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.cancel{text-decoration:line-through}\r\n</style>"]},"metadata":{},"sourceType":"module"}