{"ast":null,"code":"import { ref, watch } from 'vue';\nimport axios from '../../axios/axiossetting.js';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const join = ref({\n      id: '',\n      password: '',\n      name: '',\n      age: '',\n      gender: '남',\n      email: ''\n    });\n    const id_message = ref(\"\");\n    const email_message = ref(\"\");\n    const id_color = ref(\"\");\n    const email_color = ref(\"\");\n    const code = ref(\"\");\n    const router = useRouter();\n\n    const login = () => {\n      router.push({\n        name: 'Login'\n      });\n    };\n\n    const idcheck = async () => {\n      try {\n        console.log(\"idcheck=\" + join.value.id); //const res = await axios.get(`members/idcheck?id=${join.value.id}`);  <- GET 방식\n\n        const res = await axios.get(\"/members/idcheck\", {\n          params: {\n            id: join.value.id\n          }\n        });\n        console.log(\"res.data=\" + res.data);\n\n        if (res.data == 1) {\n          id_message.value = \"이미 사용중인 아이디 입니다.\";\n          id_color.value = 'red';\n        } else {\n          id_message.value = \"사용 가능한 아이디 입니다.\";\n          id_color.value = 'green';\n        }\n      } catch (err) {\n        console.log(\"err\" + err);\n      }\n    }; //idcheck end\n\n    /* \r\n             1. 객체를 watch 하는 경우\r\n             watch(join.value, (next, prev)=>{\r\n               })\r\n             2. 객체의 속성 일부분을 watch하는 경우 첫번째 매개변수를 애로우 함수로 작성합니다\r\n                 watch(\r\n                     ()=> join.value.id,\r\n                     (next, prev)=>{\r\n                  })\r\n    */\n\n\n    watch(() => join.value.id, (next, prev) => {\n      console.log('watch(id) : ' + prev + \" => \" + next);\n      var pattern = /^\\w{5,12}$/;\n\n      if (!pattern.test(join.value.id)) {\n        id_message.value = \"영문자 숫자 _로 5~12자 가능합니다.\";\n        id_color.value = 'red';\n      } else {\n        idcheck();\n      } //else end\n\n    }); //watch end\n\n    watch(() => join.value.email, (next, prev) => {\n      console.log('watch(email) : ' + prev + \" => \" + next);\n      var pattern = /^\\w+@\\w+[.]\\w{3}$/;\n\n      if (!pattern.test(join.value.email)) {\n        email_message.value = \"이메일 형식이 맞지않습니다.\";\n        email_color.value = 'red';\n      } else {\n        email_message.value = \"이메일 형식이 일치합니다.\";\n        email_color.value = 'green';\n      } //else end\n\n    }); //watch end\n\n    const joinProcess = async () => {\n      if (id_color.value == 'red') {\n        alert(\"아이디를 확인하세요\");\n      } else if (email_color.value == \"red\") {\n        alert(\"email을 확인하세요\");\n      } else if (code.value != \"tiger\") {\n        alert(\"회사 코드를 확인하세요\");\n      } else {\n        try {\n          const res = await axios.post('members/new', join.value);\n\n          if (res.data == 1) {\n            alert(\"회원 가입을 축하합니다.\");\n            router.push({\n              name: 'Main'\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    return {\n      code,\n      login,\n      join,\n      id_message,\n      email_message,\n      id_color,\n      email_color,\n      joinProcess,\n      idcheck\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","watch","axios","useRouter","setup","join","id","password","name","age","gender","email","id_message","email_message","id_color","email_color","code","router","login","push","idcheck","console","log","value","res","get","params","data","err","next","prev","pattern","test","joinProcess","alert","post","error"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\component\\member\\member_join.vue"],"sourcesContent":["<template>\r\n    <form class='mainform'>\r\n    <div class=\"login-container\">\r\n\t<form action=\"\" class=\"form-login\" @submit.prevent=\"joinProcess\">\r\n\t\t<ul class=\"login-nav\">\r\n\t\t\t<li class=\"login-nav__item\" @click=\"login\">\r\n\t\t\t\t<a href=\"#\">로그인</a>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"login-nav__item active\">\r\n\t\t\t\t<a href=\"#\" @click=\"join\">회원가입</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<label for=\"login-input-user\" class=\"login__label\">\r\n\t\t\t아이디 <span :class=\"id_color\">{{id_message}}</span>\r\n\t\t</label>\r\n         <!-- watch로 데이터 변화 확인합니다. lazy 붙지 않습니다.-->\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"text\" v-model=\"join.id\" required maxlength=\"12\" placeholder=\"Enter id\" />\r\n        \r\n        <label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\t비밀번호\r\n\t\t</label>\r\n\t\t<input id=\"login-input-password\" class=\"login__input\" type=\"password\"  v-model=\"join.password\" name=\"password\" placeholder=\"Enter password\" required/>\r\n\t\t\r\n        <label for=\"login-input-name\" class=\"login__label\">\r\n            이름\r\n        </label>\r\n        <input id=\"login-input-user\" class=\"login__input login__input1\" type=\"text\" v-model.lazy=\"join.name\" maxlength=\"15\" required placeholder=\"Enter name\" />\r\n\r\n        <label for=\"login-input-age\" class=\"login__label\">\r\n            나이\r\n        </label>\r\n        <input id=\"login-input-user\" class=\"login__input\" type=\"text\"  maxlength=\"2\" v-model.lazy=\"join.age\" \r\n                            pattern=\"[1-9][0-9]\" required placeholder=\"Enter age\" />\r\n        \r\n        <label for=\"login-input-gender\" class=\"login__label\" style=\"margin-top:30px;margin-bottom:30px;\">\r\n            성별 &emsp;&emsp;\r\n            <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"남\" checked><span>&ensp;남자</span>&emsp;\r\n            <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"여\"><span>&ensp;여자</span>\r\n        </label>\r\n\r\n        <label for=\"login-input-email\" class=\"login__label\">\r\n            이메일 <span :class=\"email_color\">{{email_message}}</span>\r\n        </label>\r\n        <input id=\"login-input-user\" class=\"login__input\" type=\"text\" v-model=\"join.email\" maxlength=\"30\" required placeholder=\"Enter email\" />\r\n\r\n        <label for=\"login-input-code\" class=\"login__label\">\r\n            회사코드\r\n        </label>\r\n        <input id=\"login-input-user\" class=\"login__input\" type=\"text\" v-model=\"code\" maxlength=\"5\" required placeholder=\"Enter code\" />\r\n\r\n        <button type=\"submit\" class=\"login__submit\">회원가입</button>\r\n\t</form>\r\n</div>\r\n  </form>\r\n    </template>\r\n    \r\n    <script>\r\n    import {ref,watch} from 'vue';\r\n    import axios from '../../axios/axiossetting.js';\r\n    import { useRouter } from 'vue-router';\r\n    export default {\r\n        setup(){\r\n            const join = ref({\r\n             id:'', \r\n             password:'',\r\n            name: '',\r\n             age:'',\r\n            gender:'남',\r\n            email:''\r\n       });\r\n       const id_message = ref(\"\");\r\n       const email_message = ref(\"\");\r\n       const id_color = ref(\"\");\r\n       const email_color = ref(\"\");\r\n       const code=ref(\"\");\r\n\r\n       const router = useRouter();\r\n\r\n       const login = () => {\r\n            router.push({\r\n                name:'Login'\r\n            });\r\n            }\r\n       const idcheck = async ()=>{\r\n        try{\r\n                console.log(\"idcheck=\"+join.value.id);\r\n                //const res = await axios.get(`members/idcheck?id=${join.value.id}`);  <- GET 방식\r\n                const res = await axios.get(\"/members/idcheck\", {params : { id : join.value.id } } );\r\n                console.log(\"res.data=\"+res.data);\r\n                if(res.data==1){\r\n                    id_message.value=\"이미 사용중인 아이디 입니다.\";\r\n                    id_color.value='red';\r\n                }else{\r\n                    id_message.value=\"사용 가능한 아이디 입니다.\";\r\n                    id_color.value='green';\r\n                }\r\n        }catch(err){\r\n            console.log(\"err\"+err)\r\n        }\r\n       }//idcheck end\r\n\r\n       /* \r\n                1. 객체를 watch 하는 경우\r\n                watch(join.value, (next, prev)=>{\r\n\r\n                })\r\n                2. 객체의 속성 일부분을 watch하는 경우 첫번째 매개변수를 애로우 함수로 작성합니다\r\n                    watch(\r\n                        ()=> join.value.id,\r\n                        (next, prev)=>{\r\n                     })\r\n       */\r\n    \r\n        watch(\r\n            ()=> join.value.id,\r\n            (next, prev)=>{\r\n                        console.log('watch(id) : ' + prev + \" => \" + next)\r\n           var pattern = /^\\w{5,12}$/;\r\n                    if(!pattern.test(join.value.id )){\r\n                                id_message.value=\"영문자 숫자 _로 5~12자 가능합니다.\";\r\n                                id_color.value='red';\r\n                    }else{\r\n                                idcheck();\r\n                    }//else end\r\n        })//watch end\r\n\r\n        watch(()=> join.value.email,\r\n            (next, prev)=>{\r\n                  console.log('watch(email) : ' + prev + \" => \" + next)\r\n                  var pattern = /^\\w+@\\w+[.]\\w{3}$/;\r\n                    if(!pattern.test(join.value.email )){\r\n                        email_message.value=\"이메일 형식이 맞지않습니다.\";\r\n                        email_color.value='red';\r\n                    }else{\r\n                        email_message.value=\"이메일 형식이 일치합니다.\";\r\n                        email_color.value='green';\r\n                    }//else end\r\n        })//watch end\r\n        \r\n        const joinProcess = async () =>{\r\n            if(id_color.value=='red'){\r\n                alert(\"아이디를 확인하세요\");\r\n            }else if(email_color.value==\"red\"){\r\n                alert(\"email을 확인하세요\");\r\n            }else if(code.value!=\"tiger\"){\r\n                alert(\"회사 코드를 확인하세요\");\r\n            }else{\r\n                try{\r\n                        const res = await axios.post('members/new',join.value);\r\n                        if(res.data==1){\r\n                            alert(\"회원 가입을 축하합니다.\")\r\n                            router.push({\r\n                                        name:'Main'\r\n                            });\r\n                        }\r\n                }catch(error){\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n\r\n            return{\r\n                code,login,join,id_message,email_message,id_color,email_color, joinProcess, idcheck\r\n            };\r\n        }\r\n    };\r\n    \r\n    </script>\r\n    \r\n    <style scoped>\r\n    .green{\r\n        display: inline-block;\r\n        padding-left: 1rem;\r\n        text-transform: uppercase;\r\n        font-size: .75rem;\r\n        color:mediumseagreen\r\n    }\r\n    .red{\r\n        display: inline-block;\r\n        padding-left: 1rem;\r\n        text-transform: uppercase;\r\n        font-size: .75rem;\r\n        color:tomato\r\n    }\r\n  .mainform{\r\n  margin-bottom:150px;\r\n}\r\n.login-container {\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\tz-index: 0;\r\n\tmargin: 4rem auto 0;\r\n  padding: 5rem 4rem 0 4rem;\r\n\twidth: 100%;\r\n\tmax-width: 525px;\r\n\tmin-height: 680px;\r\n\tbackground-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/283591/login-background.jpg);\r\n\tbox-shadow: 0 50px 70px -20px rgba(0, 0, 0, 0.85);\r\n}\r\n\r\n.login-container:after {\r\n\tcontent: '';\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\tz-index: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tbackground-image: radial-gradient(ellipse at left bottom, rgba(22, 24, 47, 1) 0%,rgba(38, 20, 72, .9) 59%, rgba(17, 27, 75, .9) 100%);\r\n\tbox-shadow: 0 -20px 150px -20px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.form-login {\r\n\tposition: relative;\r\n\tz-index: 1;\r\n  padding-bottom: 4.5rem;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.25);\r\n}\r\n\r\n.login-nav {\r\n\tposition: relative;\r\n\tpadding: 0;\r\n\tmargin: 0 0 2.3em 1rem;\r\n}\r\n\r\n.login-nav__item {\r\n\tlist-style: none;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.login-nav__item + .login-nav__item {\r\n\tmargin-left: 2.25rem;\r\n}\r\n\r\n.login-nav__item a {\r\n\tposition: relative;\r\n\tcolor: rgba(255, 255, 255, 0.5);\r\n\ttext-decoration: none;\r\n\ttext-transform: uppercase;\r\n\tfont-weight: 500;\r\n\tfont-size: 1.25rem;\r\n\tpadding-bottom: .5rem;\r\n\ttransition: .20s all ease;\r\n}\r\n\r\n.login-nav__item.active a,\r\n.login-nav__item a:hover{\r\n\tcolor: #ffffff;\r\n\ttransition: .15s all ease;\r\n}\r\n\r\n.login-nav__item a:after {\r\n\tcontent: '';\r\n  display: inline-block;\r\n  height: 10px;\r\n  background-color: rgb(255, 255, 255);\r\n  position: absolute;\r\n  right: 100%;\r\n  bottom: -1px;\r\n  left: 0;\r\n  border-radius: 50%;\r\n  transition: .15s all ease;\r\n}\r\n\r\n.login-nav__item a:hover:after,\r\n.login-nav__item.active a:after{\r\n\tbackground-color: rgb(17, 97, 237);\r\n\theight: 2px;\r\n\tright: 0;\r\n\tbottom: 2px;\r\n\tborder-radius: 0;\r\n\ttransition: .20s all ease;\r\n}\r\n.login__label {\r\n\tdisplay: block;\r\n\tpadding-left: 1rem;\r\n}\r\n\r\n.login__label,\r\n.login__label--checkbox {\r\n\tcolor: rgba(255, 255, 255, 0.5);\r\n\ttext-transform: uppercase;\r\n\tfont-size: .75rem;\r\n\tmargin-bottom: 1rem;\r\n}\r\n\r\n.login__label--checkbox {\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\tpadding-left: 1.5rem;\r\n\tmargin-top: 2rem;\r\n\tmargin-left: 1rem;\r\n\tcolor: #ffffff;\r\n\tfont-size: .75rem;\r\n\ttext-transform: inherit;\r\n}\r\n\r\n.login__input {\r\n\tcolor: white;\r\n\tfont-size: 1.15rem;\r\n\twidth: 100%;\r\n\tpadding: .5rem 1rem;\r\n\tborder: 2px solid transparent;\r\n\toutline: none;\r\n\tborder-radius: 1.5rem;\r\n\tbackground-color: rgba(255, 255, 255, 0.25);\r\n\tletter-spacing: 1px;\r\n}\r\n\r\n.login__input:hover,\r\n.login__input:focus{\r\n\tcolor: white;\r\n\tborder: 2px solid rgba(255, 255, 255, 0.5);\r\n\tbackground-color: transparent;\r\n}\r\n.login__input + .login__label {\r\n\tmargin-top: 1rem;\r\n}\r\n\r\n.login__input--checkbox {\r\n\tposition: absolute;\r\n\ttop: .1rem;\r\n\tleft: 0;\r\n\tmargin: 0;\r\n}\r\n\r\n.login__submit {\r\n\tcolor: #ffffff;\r\n\tfont-size: 1rem;\r\n\tfont-family: 'Montserrat', sans-serif;\r\n\ttext-transform: uppercase;\r\n\tletter-spacing: 1px;\r\n\tmargin-top: 3rem;\r\n\tpadding: .75rem;\r\n\tborder-radius: 2rem;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tbackground-color: rgba(17, 97, 237, .75);\r\n\tborder: none;\r\n\tcursor: pointer;\r\n}\r\n\r\n.login__submit:hover {\r\n\tbackground-color: rgba(17, 97, 237, 1);\r\n}\r\n\r\n.login__forgot {\r\n\tdisplay: block;\r\n\tmargin-top: 3rem;\r\n\ttext-align: center;\r\n\tcolor: rgba(255, 255, 255, 0.75);\r\n\tfont-size: .75rem;\r\n\ttext-decoration: none;\r\n\tposition: relative;\r\n\tz-index: 1;\r\n}\r\n\r\n.login__forgot:hover {\r\n\tcolor: rgb(17, 97, 237);\r\n}\r\n    </style>"]},"metadata":{},"sourceType":"module"}