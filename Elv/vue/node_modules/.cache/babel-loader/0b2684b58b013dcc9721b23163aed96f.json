{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-33e15ebc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"orange\"\n}, \" 체크박스가 선택하면 true, 해제시 false 값을 갖지만 프로퍼티가 배열인 경우 값을 저장합니다. \", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"green\"\n}, \"프로퍼티 값이 true 또는 false인 경우\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"vue\");\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"green\"\n}, \"프로퍼티 배열인 경우\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"vue \");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"html \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"label\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.isCheck = $event),\n    value: \"one\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $setup.isCheck]])]), _createElementVNode(\"p\", null, \" 체크 박스의 상태는 \" + _toDisplayString($setup.isCheck), 1\n  /* TEXT */\n  ), _hoisted_6, _hoisted_7, _createElementVNode(\"label\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedValue = $event),\n    value: \"vue.js\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $setup.selectedValue]])]), _createElementVNode(\"label\", null, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedValue = $event),\n    value: \"HTML\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $setup.selectedValue]])]), _createElementVNode(\"p\", null, \"선택한 체크 박스의 값은 \" + _toDisplayString($setup.selectedValue), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACKA,KAAK,EAAC;;;gEACPC,oBAEK,IAFL,EAEK;EAFDD,KAAK,EAAC;AAEL,CAFL,EAAmB,4DAAnB,EAEA;AAAA;AAFA;;gEAIAC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEACAA,oBAAgD,IAAhD,EAAgD;EAA5CD,KAAK,EAAC;AAAsC,CAAhD,EAAkB,2BAAlB,EAA2C;AAAA;AAA3C;;iDACO;;gEAGPC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gEACAA,oBAAkC,IAAlC,EAAkC;EAA9BD,KAAK,EAAC;AAAwB,CAAlC,EAAkB,aAAlB,EAA6B;AAAA;AAA7B;;iDACO;;iDACA;;;uBAbXE,oBAeM,KAfN,cAeM,CAdFC,UAcE,EAVFC,UAUE,EATFC,UASE,EARFJ,oBAAuE,OAAvE,EAAuE,IAAvE,EAAuE,6BAA7DA,oBAAqD,OAArD,EAAqD;IAA9CK,IAAI,EAAC,UAAyC;+DAArBC,iBAAOC,OAAc;IAAZC,KAAK,EAAC;EAAM,CAArD;;EAAA,sBAAgCF,iBAA6B,CAAvE,CAQE,EAPFN,oBAA8B,GAA9B,EAA8B,IAA9B,EAAG,iBAAYS,iBAAEH,cAAF,CAAf,EAAwB;EAAA;EAAxB,CAOE,EALFI,UAKE,EAJFC,UAIE,EAHFX,oBAAiF,OAAjF,EAAiF,IAAjF,EAAiF,6BAAtEA,oBAA8D,OAA9D,EAA8D;IAAvDK,IAAI,EAAC,UAAkD;+DAA9BC,uBAAaC,OAAiB;IAAfC,KAAK,EAAC;EAAS,CAA9D;;EAAA,sBAAgCF,uBAAsC,CAAjF,CAGE,EAFFN,oBAAgF,OAAhF,EAAgF,IAAhF,EAAgF,6BAApEA,oBAA4D,OAA5D,EAA4D;IAArDK,IAAI,EAAC,UAAgD;+DAA5BC,uBAAaC,OAAe;IAAbC,KAAK,EAAC;EAAO,CAA5D;;EAAA,sBAAgCF,uBAAoC,CAAhF,CAEE,EADFN,oBAAsC,GAAtC,EAAsC,IAAtC,EAAG,mBAAcS,iBAAEH,oBAAF,CAAjB,EAAgC;EAAA;EAAhC,CACE,CAfN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","type","$setup","$event","value","_toDisplayString","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex04_v_medel\\App03_checkbox.vue"],"sourcesContent":["<template>\r\n<div class=\"container\">\r\n    <h5 class=\"orange\">\r\n        체크박스가 선택하면 true, 해제시 false 값을 갖지만 프로퍼티가 배열인 경우 값을 저장합니다.\r\n    </h5>\r\n\r\n    <hr>\r\n    <h6 class=\"green\">프로퍼티 값이 true 또는 false인 경우</h6>\r\n    <label>vue<input type=\"checkbox\" v-model=\"isCheck\" value=\"one\"></label>\r\n    <p> 체크 박스의 상태는 {{isCheck}}</p>\r\n\r\n    <hr>\r\n    <h6 class=\"green\">프로퍼티 배열인 경우</h6>\r\n    <label>vue <input type=\"checkbox\" v-model=\"selectedValue\" value=\"vue.js\"></label>\r\n    <label>html <input type=\"checkbox\" v-model=\"selectedValue\" value=\"HTML\"></label>\r\n    <p>선택한 체크 박스의 값은 {{selectedValue}}</p>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue';\r\nexport default {\r\n    setup(){\r\n        const isCheck=ref(false); //초기값으로 false를 주면 해제가 되고 체크하면 true값을 반환\r\n        const selectedValue=ref([]); //초기값으로 배열을 사용한 경우 체크한 값을 배열에 저장\r\n\r\n        return{\r\n            isCheck,selectedValue\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nlabel {display:block}\r\n.green{color:green; font-weight: 900;}\r\n.orange{color:orange;}\r\n</style>"]},"metadata":{},"sourceType":"module"}