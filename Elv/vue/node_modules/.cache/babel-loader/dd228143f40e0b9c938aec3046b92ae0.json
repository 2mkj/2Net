{"ast":null,"code":"import child from './childView.vue';\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  components: {\n    child\n  },\n\n  setup() {\n    const store_message = ref('');\n    const store = useStore();\n    store_message.value = store.state.message; //부모에서 입력한 값의 변화가 있으면 store에 저장되도록\n    //store.dispatch('actions 함수명', '저장할 값')를 호출합니다\n    //store에서 actions의 update()가 실행됩니다\n\n    const change = event => {\n      store.dispatch('update', event.target.value);\n    };\n\n    return {\n      change,\n      store_message\n    };\n  }\n\n};","map":{"version":3,"mappings":"AASA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAAQC,GAAR,QAAkB,KAAlB;AACA,SAAQC,QAAR,QAAuB,MAAvB;AACA,eAAe;EACXC,UAAU,EAAC;IACPH;EADO,CADA;;EAIXI,KAAK,GAAE;IACD,MAAMC,aAAY,GAAIJ,GAAG,CAAC,EAAD,CAAzB;IACA,MAAMK,KAAI,GAAIJ,QAAQ,EAAtB;IACAG,aAAa,CAACE,KAAd,GAAsBD,KAAK,CAACE,KAAN,CAAYC,OAAlC,CAHC,CAMD;IACA;IACA;;IACA,MAAMC,MAAK,GAAKC,KAAD,IAAS;MACtBL,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyBD,KAAK,CAACE,MAAN,CAAaN,KAAtC;IACF,CAFA;;IAIA,OAAM;MACJG,MADI;MACIL;IADJ,CAAN;EAGJ;;AApBS,CAAf","names":["child","ref","useStore","components","setup","store_message","store","value","state","message","change","event","dispatch","target"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex17_store\\_3\\parentView.vue"],"sourcesContent":["<template>\r\n  <div class=\"parent\">\r\n    <child></child>\r\n    [parent]store에서 가져온 값 : {{store_message}}<br>\r\n    부모에서 입력합니다. <input @input=\"change\" :value=\"store_message\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport child from './childView.vue';\r\nimport {ref} from 'vue';\r\nimport {useStore} from 'vuex';\r\nexport default {\r\n    components:{\r\n        child\r\n    },\r\n    setup(){\r\n          const store_message = ref('');\r\n          const store = useStore();\r\n          store_message.value = store.state.message;\r\n          \r\n\r\n          //부모에서 입력한 값의 변화가 있으면 store에 저장되도록\r\n          //store.dispatch('actions 함수명', '저장할 값')를 호출합니다\r\n          //store에서 actions의 update()가 실행됩니다\r\n          const change = (event)=>{\r\n            store.dispatch('update', event.target.value);\r\n          }\r\n\r\n          return{\r\n            change, store_message\r\n          }\r\n      }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.parent{\r\n    background: rgb(255, 240, 180);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}