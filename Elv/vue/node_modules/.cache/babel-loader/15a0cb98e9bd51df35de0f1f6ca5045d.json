{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelRadio as _vModelRadio, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f5a6b414\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"빨간색 \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 노란색 \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 오렌지색 \");\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" isColor2의 초기값을 주면 해당 radio 버튼이 선택됩니다. \");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"빨간색\");\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"노란색\");\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" 오렌지색 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\r\\n사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\\r\\n태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\\r\\n웹 페이지에서 입력한 값이 자바스크립트에 반영 되므로 양방향 바인딩이라고도 합니다.\\r\\n\"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.isColor = $event),\n    value: \"red\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor]]), _hoisted_2])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.isColor = $event),\n    value: \"yellow\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor]]), _hoisted_3])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.isColor = $event),\n    value: \"orange\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor]]), _hoisted_4])]), _createElementVNode(\"p\", null, \" value : \" + _toDisplayString($setup.isColor), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      color: $setup.isColor\n    })\n  }, \"나는 \" + _toDisplayString($setup.isColor) + \" 색 입니다. \", 5\n  /* TEXT, STYLE */\n  ), _hoisted_5, _hoisted_6, _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.isColor2 = $event),\n    value: \"red\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor2]]), _hoisted_7])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.isColor2 = $event),\n    value: \"yellow\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor2]]), _hoisted_8])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.isColor2 = $event),\n    value: \"orange\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.isColor2]]), _hoisted_9])])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EAMKA,KAAK,EAAC;;;iDACuD;;iDACG;;iDACA;;gEAIjEC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iDAAI;;iDAE2D;;iDACG;;iDACA;;;6DAhBtEC,gKAKAD,oBAYM,KAZN,cAYM,CAXFA,oBAAgF,KAAhF,EAAgF,IAAhF,EAAgF,CAA3EA,oBAAqE,OAArE,EAAqE,IAArE,EAAqE,iBAA9DA,oBAAkD,OAAlD,EAAkD;IAA3CE,IAAI,EAAC,OAAsC;+DAArBC,iBAAOC,OAAc;IAAZC,KAAK,EAAC;EAAM,CAAlD;;EAAA,mBAA6BF,iBAAiC,aAArE,CAA2E,CAAhF,CAWE,EAVFH,oBAAqF,KAArF,EAAqF,IAArF,EAAqF,CAAhFA,oBAAyE,OAAzE,EAAyE,IAAzE,EAAyE,iBAAlEA,oBAAqD,OAArD,EAAqD;IAA9CE,IAAI,EAAC,OAAyC;+DAAxBC,iBAAOC,OAAiB;IAAfC,KAAK,EAAC;EAAS,CAArD;;EAAA,mBAA6BF,iBAAqC,aAAzE,CAAgF,CAArF,CAUE,EATFH,oBAAsF,KAAtF,EAAsF,IAAtF,EAAsF,CAAjFA,oBAA0E,OAA1E,EAA0E,IAA1E,EAA0E,iBAAnEA,oBAAqD,OAArD,EAAqD;IAA9CE,IAAI,EAAC,OAAyC;+DAAxBC,iBAAOC,OAAiB;IAAfC,KAAK,EAAC;EAAS,CAArD;;EAAA,mBAA6BF,iBAAsC,aAA1E,CAAiF,CAAtF,CASE,EARFH,oBAA6B,GAA7B,EAA6B,IAA7B,EAAG,cAASM,iBAAGH,cAAH,CAAZ,EAAsB;EAAA;EAAtB,CAQE,EAPFH,oBAAsD,GAAtD,EAAsD;IAAlDO,KAAK;MAAAC,OAASL;IAAT;EAA6C,CAAtD,EAA4B,QAAGG,iBAAEH,cAAF,CAAH,GAAc,UAA1C,EAAkD;EAAA;EAAlD,CAOE,EALFM,UAKE,cAHFT,oBAAgF,KAAhF,EAAgF,IAAhF,EAAgF,CAA3EA,oBAAqE,OAArE,EAAqE,IAArE,EAAqE,iBAA9DA,oBAAmD,OAAnD,EAAmD;IAA5CE,IAAI,EAAC,OAAuC;+DAAtBC,kBAAQC,OAAc;IAAZC,KAAK,EAAC;EAAM,CAAnD;;EAAA,mBAA6BF,kBAAiC,aAArE,CAA2E,CAAhF,CAGE,EAFFH,oBAAoF,KAApF,EAAoF,IAApF,EAAoF,CAA/EA,oBAAwE,OAAxE,EAAwE,IAAxE,EAAwE,iBAAjEA,oBAAsD,OAAtD,EAAsD;IAA/CE,IAAI,EAAC,OAA0C;+DAAzBC,kBAAQC,OAAiB;IAAfC,KAAK,EAAC;EAAS,CAAtD;;EAAA,mBAA6BF,kBAAoC,aAAxE,CAA+E,CAApF,CAEE,EADFH,oBAAuF,KAAvF,EAAuF,IAAvF,EAAuF,CAAlFA,oBAA2E,OAA3E,EAA2E,IAA3E,EAA2E,iBAApEA,oBAAsD,OAAtD,EAAsD;IAA/CE,IAAI,EAAC,OAA0C;+DAAzBC,kBAAQC,OAAiB;IAAfC,KAAK,EAAC;EAAS,CAAtD;;EAAA,mBAA6BF,kBAAuC,aAA3E,CAAkF,CAAvF,CACE,CAZN","names":["class","_createElementVNode","_createCommentVNode","type","$setup","$event","value","_toDisplayString","style","color","_hoisted_5"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex04_v_medel\\App08_select.vue"],"sourcesContent":["<template>\r\n<!--\r\n사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\r\n태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\r\n웹 페이지에서 입력한 값이 자바스크립트에 반영 되므로 양방향 바인딩이라고도 합니다.\r\n-->\r\n<div class=\"container\">\r\n    <div><label><input type=\"radio\" v-model=\"isColor\" value='red'>빨간색 </label></div>\r\n    <div><label><input type=\"radio\" v-model=\"isColor\" value='yellow'> 노란색 </label> </div>\r\n    <div><label><input type=\"radio\" v-model=\"isColor\" value='orange'> 오렌지색 </label> </div>\r\n    <p> value : {{ isColor }}</p>\r\n    <p :style=\"{color:isColor}\">나는 {{isColor}} 색 입니다. </p>\r\n\r\n    <hr>\r\n    isColor2의 초기값을 주면 해당 radio 버튼이 선택됩니다.\r\n    <div><label><input type=\"radio\" v-model=\"isColor2\" value='red'>빨간색</label></div>\r\n    <div><label><input type=\"radio\" v-model=\"isColor2\" value='yellow'>노란색</label> </div>\r\n    <div><label><input type=\"radio\" v-model=\"isColor2\" value='orange'> 오렌지색 </label> </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue';\r\nexport default {\r\n    setup(){\r\n        const isColor = ref(''); //String으로 초기화합니다.\r\n        const isColor2 = ref('red'); //초기값으로 'red'를 주면 빨간색 선택됩니다.\r\n        return{\r\n            isColor, isColor2\r\n        };\r\n    }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\nlabel {display:block}\r\n</style>"]},"metadata":{},"sourceType":"module"}