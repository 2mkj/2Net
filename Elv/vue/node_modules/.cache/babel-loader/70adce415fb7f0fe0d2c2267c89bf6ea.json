{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-564f11ec\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container\"\n}, [/*#__PURE__*/_createCommentVNode(\" \\r\\n        1. :disabled=\\\"true\\\" 이면 disabled 속성을 사용할 수 있습니다.\\r\\n            :disabled=\\\"false\\\" 이면 disabled 속성을 사용할 수 없습니다.\\r\\n \"), /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-info btn-sm\",\n  disabled: false\n}, \"false\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-info btn-sm\",\n  disabled: true\n}, \"true\"), /*#__PURE__*/_createElementVNode(\"hr\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" \\r\\n        사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\\r\\n        태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\\r\\n        웹 페이지에서 입력한 값이 자바스크립트에 반영되므로 양방향 바인딩이라고도 합니다.\\r\\n\\r\\n        동의를 선택하면 전송버튼을 활성화하고\\r\\n        동의를 선택하지 않으면 전송버튼을 비활성화 합니다.\\r\\n\\r\\n     \"), _hoisted_1], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEAUAA,oBASM,KATN,EASM;EATDC,KAAK,EAAC;AASL,CATN,EAAsB,cACtBC,yJADsB,eAKrBF,oBAAoE,QAApE,EAAoE;EAA5DC,KAAK,EAAC,qBAAsD;EAA/BE,QAAQ,EAAE;AAAqB,CAApE,EAAsD,OAAtD,CALqB,eAMrBH,oBAAkE,QAAlE,EAAkE;EAA1DC,KAAK,EAAC,qBAAoD;EAA7BE,QAAQ,EAAE;AAAmB,CAAlE,EAAqD,MAArD,CANqB,eAQrBH,oBAAI,IAAJ,CARqB,CAAtB;;AAAA;;;6DATIE,6QASJE","names":["_createElementVNode","class","_createCommentVNode","disabled","_hoisted_1"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex04_v_medel\\App06_checkbox_disabled.vue"],"sourcesContent":["<template>\r\n    <!-- \r\n        사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\r\n        태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\r\n        웹 페이지에서 입력한 값이 자바스크립트에 반영되므로 양방향 바인딩이라고도 합니다.\r\n\r\n        동의를 선택하면 전송버튼을 활성화하고\r\n        동의를 선택하지 않으면 전송버튼을 비활성화 합니다.\r\n\r\n     -->\r\n<div class=\"container\">\r\n<!-- \r\n        1. :disabled=\"true\" 이면 disabled 속성을 사용할 수 있습니다.\r\n            :disabled=\"false\" 이면 disabled 속성을 사용할 수 없습니다.\r\n -->\r\n <button class=\"btn btn-info btn-sm\" :disabled=\"false\">false</button>\r\n <button class=\"btn btn-info btn-sm\" :disabled=\"true\">true</button>\r\n\r\n <hr>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {ref,watch} from 'vue';\r\nexport default {\r\n    setup(){\r\n        const isCheck=ref([]); //배열을 사용하면 체크한 값이 저장됩니다.\r\n        const isCheck2=ref([]); \r\n        const isAll = ref(false); //선택하면 true, 해제하면 false값을 갖는다.\r\n\r\n        const all = () => {\r\n            if(isAll.value){\r\n                isCheck2.value = [\"과일\",\"빵\",\"피자\"];\r\n            }else{\r\n                isCheck2.value = [];\r\n            }\r\n        } //all\r\n        watch(isCheck2, ()=>{\r\n            isAll.value = isCheck2.value.length==3 ? true : false ;\r\n        });\r\n\r\n        return{\r\n            isCheck2,isCheck,isAll,all\r\n        };\r\n    }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\nlabel {display:block}\r\n.green{color:green; font-weight: 900;}\r\n.orange{color:orange;}\r\n</style>"]},"metadata":{},"sourceType":"module"}