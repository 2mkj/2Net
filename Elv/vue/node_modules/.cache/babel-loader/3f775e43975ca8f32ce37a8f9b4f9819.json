{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelRadio as _vModelRadio, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-441551f8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"회원가입 페이지\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"아이디\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"비밀번호\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"나이\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"성별\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"남자\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"여자\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"이메일 주소\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"clearfix\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submitbtn\"\n}, \"회원가입\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"reset\",\n  class: \"cancelbtn\"\n}, \"다시작성\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $setup.joinProcess && $setup.joinProcess(...args), [\"prevent\"]))\n  }, [_hoisted_1, _hoisted_2, _hoisted_3, _createCommentVNode(\" watch로 데이터 변화 확인합니다. lazy 붙지 않습니다.\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.join.id = $event),\n    required: \"\",\n    maxlength: \"12\",\n    placeholder: \"Enter id\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.join.id]]), _createElementVNode(\"span\", {\n    class: _normalizeClass($setup.id_color)\n  }, _toDisplayString($setup.id_message), 3\n  /* TEXT, CLASS */\n  ), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.join.password = $event),\n    required: \"\",\n    placeholder: \"Enter password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.join.password, void 0, {\n    lazy: true\n  }]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.join.name = $event),\n    maxlength: \"15\",\n    required: \"\",\n    placeholder: \"Enter name\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.join.name, void 0, {\n    lazy: true\n  }]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    maxlength: \"2\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.join.age = $event),\n    pattern: \"[1-9][0-9]\",\n    required: \"\",\n    placeholder: \"Enter age\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.join.age, void 0, {\n    lazy: true\n  }]]), _hoisted_7, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: \"gender\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.join.gender = $event),\n    value: \"남\",\n    checked: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.join.gender, void 0, {\n    lazy: true\n  }]]), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: \"gender\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.join.gender = $event),\n    value: \"여\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelRadio, $setup.join.gender, void 0, {\n    lazy: true\n  }]]), _hoisted_9]), _hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.join.email = $event),\n    maxlength: \"30\",\n    required: \"\",\n    placeholder: \"Enter email\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.join.email]]), _createElementVNode(\"span\", {\n    class: _normalizeClass($setup.email_color)\n  }, _toDisplayString($setup.email_message), 3\n  /* TEXT, CLASS */\n  ), _hoisted_11], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","type","_createElementBlock","onSubmit","$setup","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","id","$event","required","maxlength","placeholder","_hoisted_4","password","_hoisted_5","name","_hoisted_6","age","pattern","_hoisted_7","gender","value","checked","_hoisted_8","_hoisted_9","_hoisted_10","email","_hoisted_11"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\component\\member\\member_join.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"joinProcess\">\r\n    <h1>회원가입 페이지</h1>\r\n        <hr>\r\n        <b>아이디</b>\r\n        <!-- watch로 데이터 변화 확인합니다. lazy 붙지 않습니다.-->\r\n        <input type=\"text\" v-model=\"join.id\" required maxlength=\"12\" placeholder=\"Enter id\">\r\n        <span :class=\"id_color\">{{id_message}}</span>\r\n        \r\n        <b>비밀번호</b>\r\n        <input type=\"password\" v-model.lazy=\"join.password\" required placeholder=\"Enter password\">\r\n        \r\n        <b>이름</b>\r\n        <input type=\"text\" v-model.lazy=\"join.name\" maxlength=\"15\" required placeholder=\"Enter name\">\r\n        \r\n        <b>나이</b>\r\n        <input type=\"text\" maxlength=\"2\" v-model.lazy=\"join.age\" \r\n                            pattern=\"[1-9][0-9]\" required placeholder=\"Enter age\">\r\n    \r\n        <b>성별</b>\r\n        <div>\r\n            <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"남\" checked><span>남자</span>\r\n            <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"여\"><span>여자</span>\r\n        </div>\r\n        \r\n        <b>이메일 주소</b>\r\n        <input type=\"text\" v-model=\"join.email\" maxlength=\"30\" required placeholder=\"Enter email\">\r\n        <span :class=\"email_color\">{{email_message}}</span>\r\n        <div class=\"clearfix\">\r\n            <button type=\"submit\" class=\"submitbtn\">회원가입</button>\r\n            <button type=\"reset\" class=\"cancelbtn\">다시작성</button>\r\n        </div>\r\n    </form>\r\n    </template>\r\n    \r\n    <script>\r\n    import {ref,watch} from 'vue';\r\n    import axios from '../../axios/axiossetting.js';\r\n    import { useRouter } from 'vue-router';\r\n    export default {\r\n        setup(){\r\n            const join = ref({\r\n             id:'', \r\n             password:'',\r\n            name: '',\r\n             age:'',\r\n            gender:'남',\r\n            email:''\r\n       });\r\n       const id_message = ref(\"\");\r\n       const email_message = ref(\"\");\r\n       const id_color = ref(\"\");\r\n       const email_color = ref(\"\");\r\n\r\n       const router = useRouter();\r\n\r\n       const idcheck = async ()=>{\r\n        try{\r\n                console.log(\"idcheck=\"+join.value.id);\r\n                //const res = await axios.get(`members/idcheck?id=${join.value.id}`);  <- GET 방식\r\n                const res = await axios.get(\"members/idcheck\", {param : { id : join.value.id } } );\r\n                console.log(\"res.data=\"+res.data);\r\n                if(res.data==1){\r\n                    id_message.value=\"이미 사용중인 아이디 입니다.\";\r\n                    id_color.value='red';\r\n                }else{\r\n                    id_message.value=\"사용 가능한 아이디 입니다.\";\r\n                    id_color.value='green';\r\n                }\r\n        }catch(err){\r\n            console.log(\"err\"+err)\r\n        }\r\n       }//idcheck end\r\n\r\n       /* \r\n                1. 객체를 watch 하는 경우\r\n                watch(join.value, (next, prev)=>{\r\n\r\n                })\r\n                2. 객체의 속성 일부분을 watch하는 경우 첫번째 매개변수를 애로우 함수로 작성합니다\r\n                    watch(\r\n                        ()=> join.value.id,\r\n                        (next, prev)=>{\r\n                     })\r\n       */\r\n    \r\n        watch(\r\n            ()=> join.value.id,\r\n            (next, prev)=>{\r\n                        console.log('watch(id) : ' + prev + \" => \" + next)\r\n           var pattern = /^\\w{5,12}$/;\r\n                    if(!pattern.test(join.value.id )){\r\n                                id_message.value=\"영문자 숫자 _로 5~12자 가능합니다.\";\r\n                                id_color.value='red';\r\n                    }else{\r\n                                idcheck();\r\n                    }//else end\r\n        })//watch end\r\n\r\n        watch(()=> join.value.email,\r\n            (next, prev)=>{\r\n                  console.log('watch(email) : ' + prev + \" => \" + next)\r\n                  var pattern = /^\\w+@\\w+[.]\\w{3}$/;\r\n                    if(!pattern.test(join.value.email )){\r\n                        email_message.value=\"이메일 형식이 맞지않습니다.\";\r\n                        email_color.value='red';\r\n                    }else{\r\n                        email_message.value=\"이메일 형식이 일치합니다.\";\r\n                        email_color.value='green';\r\n                    }//else end\r\n        })//watch end\r\n        \r\n        const joinProcess = async () =>{\r\n            if(id_color.value=='red'){\r\n                alert(\"아이디를 확인하세요\");\r\n            }else if(email_color.value==\"red\"){\r\n                alert(\"email을 확인하세요\");\r\n            }else{\r\n                try{\r\n                        const res = await axios.post('members/new',join.value);\r\n                        if(res.data==1){\r\n                            alert(\"회원 가입을 축하합니다.\")\r\n                            router.push({\r\n                                        name:'Login'\r\n                            });\r\n                        }\r\n                }catch(error){\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n            return{\r\n                join,id_message,email_message,id_color,email_color, joinProcess\r\n            };\r\n        }\r\n    };\r\n    \r\n    </script>\r\n    \r\n    <style scoped>\r\n        .red{color:red}\r\n        .green{color:green}\r\n         input[type=text] + span{   position: relative;\r\n                top: -20px;\r\n         }\r\n        form {font-family: Arial, Helvetica, sans-serif;}\r\n        * {box-sizing: border-box}\r\n        \r\n        \r\n        input{border-radius:3px;border:1px solid lightgray}\r\n        input[type=text], input[type=password] {\r\n            width: 100%;\r\n            padding: 10px;\r\n            margin: 5px 0 22px 0;\r\n            display: inline-block;\r\n           \r\n        }\r\n        \r\n        \r\n        input[type=radio]{\r\n            width: 5%;\r\n            display: inline-block;\r\n            border: none;\r\n        }\r\n        \r\n        \r\n        input[type=text]:focus, input[type=password]:focus {\r\n          box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\r\n            outline: none;\r\n        }\r\n        button {\r\n            background-color: #4CAF50;\r\n            color: white;\r\n            padding: 14px 20px;\r\n            margin: 8px 0;\r\n            border: none;\r\n            cursor: pointer; /* 손가락 커서 모양 */\r\n            width: 100%;\r\n            opacity: 0.9;\r\n        }\r\n        \r\n        button:hover {\r\n            opacity:1;\r\n            \r\n        }\r\n        button:focus{\r\n           outline:none;\r\n        }\r\n        \r\n        /* 취소 버튼*/\r\n        .cancelbtn {\r\n            padding: 14px 20px;\r\n            background-color: #f44336;\r\n        }\r\n        \r\n        .cancelbtn, .submitbtn {\r\n          float: left;\r\n          width: 50%;\r\n        }\r\n        form {\r\n            background-color: #fefefe;\r\n            margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n            border: 1px solid lightgray;\r\n            width: 600px; /* Could be more or less, depending on screen size */\r\n            padding: 16px;\r\n        }\r\n        \r\n        hr {\r\n            border: 1px solid #f1f1f1;\r\n            margin-bottom: 25px;\r\n        }\r\n         \r\n        b + div{width: 100%;\r\n            padding: 10px;\r\n            margin: 5px 0 22px 0;\r\n            display: inline-block;\r\n            border: none;\r\n            background: #f1f1f1;}\r\n        \r\n        /* Clear floats */\r\n        .clearfix::after {\r\n            content: \"\";\r\n            clear: both;\r\n            display: table; \r\n        }\r\n        \r\n        h1{text-align:center}\r\n        \r\n        b {\r\n            width: 100%;\r\n            display: block\r\n        }\r\n        \r\n        span{display:inline-block;margin-top:-20px;font-size:10px}\r\n        \r\n    </style>"]},"metadata":{},"sourceType":"module"}