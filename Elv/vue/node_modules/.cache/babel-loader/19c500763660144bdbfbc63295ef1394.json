{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a76424a0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-info btn-sm\",\n  disabled: false\n}, \"false\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-info btn-sm\",\n  disabled: true\n}, \"true\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" \\r\\n        사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\\r\\n        태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\\r\\n        웹 페이지에서 입력한 값이 자바스크립트에 반영되므로 양방향 바인딩이라고도 합니다.\\r\\n\\r\\n        동의를 선택하면 전송버튼을 활성화하고\\r\\n        동의를 선택하지 않으면 전송버튼을 비활성화 합니다.\\r\\n\\r\\n     \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" \\r\\n        1. :disabled=\\\"true\\\" 이면 disabled 속성을 사용할 수 있습니다.\\r\\n            :disabled=\\\"false\\\" 이면 disabled 속성을 사용할 수 없습니다.\\r\\n \"), _hoisted_2, _hoisted_3, _hoisted_4, _createCommentVNode(\" \\r\\n        2. isCheck가 false 이면 disabled 속성을 갖고 isCheck가 true이면 disabled속성은 사라집니다.\\r\\n            즉, !isCheck의 값이 참인 경우 disabled 속성을 사용할 수 있습니다.\\r\\n    \"), _createElementVNode(\"p\", null, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.isCheck = $event),\n    value: \"동의\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $setup.isCheck]]), _createTextVNode(\"동의 합니다: \" + _toDisplayString($setup.isCheck), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"button\", {\n    class: \"btn btn-info btn-sm\",\n    disabled: !$setup.isCheck\n  }, \"전송\", 8\n  /* PROPS */\n  , _hoisted_5)])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EAUKA,KAAK,EAAC;;;gEAKVC,oBAAoE,QAApE,EAAoE;EAA5DD,KAAK,EAAC,qBAAsD;EAA/BE,QAAQ,EAAE;AAAqB,CAApE,EAAsD,OAAtD,EAA2D;AAAA;AAA3D;;gEACAD,oBAAkE,QAAlE,EAAkE;EAA1DD,KAAK,EAAC,qBAAoD;EAA7BE,QAAQ,EAAE;AAAmB,CAAlE,EAAqD,MAArD,EAAyD;AAAA;AAAzD;;gEAEAD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;6DAjBGE,6QASJF,oBAoBM,KApBN,cAoBM,CAnBNE,yJAmBM,EAfLC,UAeK,EAdLC,UAcK,EAZLC,UAYK,EAXLH,iLAWK,EANFF,oBAEI,GAFJ,EAEI,IAFJ,EAEI,CADAA,oBAAsF,OAAtF,EAAsF,IAAtF,EAAsF,iBAA/EA,oBAAoD,OAApD,EAAoD;IAA7CM,IAAI,EAAC,UAAwC;+DAApBC,iBAAOC,OAAa;IAAXC,KAAK,EAAC;EAAK,CAApD;;EAAA,sBAAgCF,iBAA+C,mBAA3B,aAAQG,iBAAEH,cAAF,GAAS;EAAA;GAAU,CAAtF,CACA,CAFJ,CAME,EAFFP,oBAAoE,QAApE,EAAoE;IAA5DD,KAAK,EAAC,qBAAsD;IAA/BE,QAAQ,GAAGM;EAAoB,CAApE,EAAyD,IAAzD,EAA2D;EAAA;EAA3D,EAA2DI,UAA3D,CAEE,CApBN","names":["class","_createElementVNode","disabled","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","$setup","$event","value","_toDisplayString","_hoisted_5"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex04_v_medel\\App07_radio.vue"],"sourcesContent":["<template>\r\n    <!-- \r\n        사용자가 입력한 값을 자바스크립트의 데이터로 입력하는 방법입니다.\r\n        태그와 데이터를 연결하기 위해 v-model 디렉티브를 사용합니다.\r\n        웹 페이지에서 입력한 값이 자바스크립트에 반영되므로 양방향 바인딩이라고도 합니다.\r\n\r\n        동의를 선택하면 전송버튼을 활성화하고\r\n        동의를 선택하지 않으면 전송버튼을 비활성화 합니다.\r\n\r\n     -->\r\n<div class=\"container\">\r\n<!-- \r\n        1. :disabled=\"true\" 이면 disabled 속성을 사용할 수 있습니다.\r\n            :disabled=\"false\" 이면 disabled 속성을 사용할 수 없습니다.\r\n -->\r\n <button class=\"btn btn-info btn-sm\" :disabled=\"false\">false</button>\r\n <button class=\"btn btn-info btn-sm\" :disabled=\"true\">true</button>\r\n\r\n <hr>\r\n <!-- \r\n        2. isCheck가 false 이면 disabled 속성을 갖고 isCheck가 true이면 disabled속성은 사라집니다.\r\n            즉, !isCheck의 값이 참인 경우 disabled 속성을 사용할 수 있습니다.\r\n    -->\r\n\r\n    <p>\r\n        <label><input type=\"checkbox\" v-model=\"isCheck\" value=\"동의\">동의 합니다: {{isCheck}}</label>\r\n    </p>\r\n\r\n    <button class=\"btn btn-info btn-sm\" :disabled=\"!isCheck\">전송</button>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue';\r\nexport default {\r\n    setup(){\r\n        const isCheck = ref(false); //true 또는 false\r\n        return{\r\n            isCheck\r\n        };\r\n    }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\nlabel {display:block}\r\n</style>"]},"metadata":{},"sourceType":"module"}