{"ast":null,"code":"import axios from '../axios/axiossetting.js';\nimport { useRoute } from 'vue-router';\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  props: {\n    parent_id: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(props) {\n    //board_list.vue에서 <router-link :to=\"{name:'Board_Detail'},params:{num:`${item.board_NUM`}}\"로\n    //이동할 때 사용된 파라미터 num을 가져옵니다.\n    const board_num = useRoute().params.num;\n    let page = 1;\n    const listcount = ref(0);\n    const list = ref([]);\n    const content = ref('');\n    const message = ref(\"등록된 댓글이 없습니다.\");\n    const button_message = ref(\"등록\");\n    const count_message = ref(\"총 50자까지 가능합니다.\");\n    let comment_num = 0;\n    const store = useStore(); //component/board/board_detail.vue에서 사용될 count를 보내기위해 사용합니다.\n\n    const getList = async page => {\n      try {\n        const res = await axios.get(\"comments\", {\n          params: {\n            board_num: board_num,\n            page: page\n          }\n        });\n        listcount.value = res.data.listcount;\n        list.value = res.data.list;\n\n        if (listcount.value == 0) {\n          message.value = \"등록된 댓글이 없습니다.\";\n        } else {\n          if (listcount.value > list.value.length) {\n            message.value = \"더보기\";\n          } else {\n            message.value = \"\";\n          }\n        }\n\n        count_message.value = \"총 50자까지 가능합니다.\"; //store에 저장\n\n        store.dispatch('count', listcount.value);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getList(1);\n    const limit = 50; // 총 50자까지 가능\n\n    const change = event => {\n      let value = event.target.value;\n      let length = value.length;\n\n      if (length > limit) {\n        value = value.substring(0, limit);\n        length = limit;\n      }\n\n      count_message.value = length + \"/\" + limit;\n    };\n\n    const add = async () => {\n      if (!content.value) {\n        alert(\"내용을 입력하세요\");\n        return;\n      }\n\n      let res;\n\n      try {\n        if (button_message.value == \"등록\") {\n          res = await axios.post(\"comments/new\", {\n            board_num: board_num,\n            content: content.value,\n            id: props.parent_id\n          });\n          console.log(res.data);\n        } else {\n          res = await axios.patch(\"comments\", {\n            num: comment_num,\n            content: content.value\n          });\n          button_message.value = \"등록\";\n          console.log(res.data);\n        }\n\n        content.value = \"\";\n        if (res.data == 1) getList(1);\n      } catch (err) {\n        console.log(err);\n      }\n    }; //add end\n\n\n    const del = async num => {\n      console.log(\"삭제 num=\" + num);\n\n      if (!confirm(\"정말 삭제하시겠습니까?\")) {\n        return;\n      }\n\n      try {\n        const res = await axios.delete(`comments/${num}`);\n        if (res.data == 1) getList(1);\n      } catch (err) {\n        console.log(err);\n      }\n    }; //del end\n\n\n    const update = (con, num) => {\n      button_message.value = \"수정완료\";\n      content.value = con;\n      comment_num = num;\n      count_message.value = con.length + \"/\" + limit;\n    };\n\n    const more = () => {\n      getList(++page);\n    };\n\n    return {\n      message,\n      listcount,\n      list,\n      content,\n      button_message,\n      count_message,\n      add,\n      update,\n      del,\n      more,\n      change\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","useRoute","ref","useStore","props","parent_id","type","String","required","setup","board_num","params","num","page","listcount","list","content","message","button_message","count_message","comment_num","store","getList","res","get","value","data","length","dispatch","err","console","log","limit","change","event","target","substring","add","alert","post","id","patch","del","confirm","delete","update","con","more"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\component\\commentDo.vue"],"sourcesContent":["\r\n<template>\r\n  <div id=\"comment\">\r\n\t\t\t<button class=\"btn btn-info float-left\">{{count_message}}</button>\r\n\t\t\t<button class=\"btn btn-info float-right\" @click=\"add\">{{button_message}}</button>\r\n\t\t\t<textarea rows=3 \r\n\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t  \t\t@input = \"change\" \r\n\t\t\t\t\t\t\tv-model.trim=\"content\"\r\n\t\t\t\t      \t\tstyle=\"resize:none\" \r\n\t\t\t\t\t\t\tmaxLength=\"50\"></textarea>\r\n\t\t\t<table class=\"table table-striped\" v-if=\"listcount>0\">\r\n\t\t\t  <thead>\r\n\t\t\t    <tr><td>아이디</td><td>내용</td><td>날짜</td></tr>\r\n\t\t\t  </thead>\r\n\t\t\t  <tbody>\r\n\t\t\t\t<tr v-fot=\"(item,index) in list\" :key=\"index\">\r\n\t\t\t\t\t<td>{{item.id}}</td>\r\n\t\t\t\t\t<td>{{item.content}}</td>\r\n\t\t\t\t\t<td v-if=\"item.id==parent_id\">\r\n\t\t\t\t\t\t{{item.reg_date}}\r\n\t\t\t\t\t\t<img src=\"../assets/pencil.png\" width=\"15px\" @click=\"update(item.content,item.num)\">\r\n\t\t\t\t\t\t<img src=\"../assets/delete.png\" width=\"15px\" @click=\"update(item.num)\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td v-else>{{item.reg_date}}</td>\r\n\t\t\t\t</tr>\r\n\t\t      </tbody>\r\n\t\t    </table>\r\n\t\t<div id=\"message\" @click=\"more\">{{message}}</div>\r\n\t\t</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '../axios/axiossetting.js';\r\nimport {useRoute} from 'vue-router'\r\nimport {ref} from 'vue';\r\nimport {useStore} from 'vuex';\r\nexport default {\r\n\tprops:{\r\n        parent_id:{\r\n            type:String,\r\n            required:true\r\n        }\r\n    },\r\n\tsetup(props){\r\n\t\t//board_list.vue에서 <router-link :to=\"{name:'Board_Detail'},params:{num:`${item.board_NUM`}}\"로\r\n\t\t//이동할 때 사용된 파라미터 num을 가져옵니다.\r\n\t\tconst board_num = useRoute().params.num;\r\n\r\n\t\tlet page=1;\r\n\t\tconst listcount = ref(0);\r\n\t\tconst list = ref([]);\r\n\t\tconst content = ref('');\r\n\t\tconst message = ref(\"등록된 댓글이 없습니다.\");\r\n\t\tconst button_message = ref(\"등록\");\r\n\t\tconst count_message=ref(\"총 50자까지 가능합니다.\");\r\n\t\tlet comment_num =0;\r\n\t\tconst store = useStore(); //component/board/board_detail.vue에서 사용될 count를 보내기위해 사용합니다.\r\n\r\n\t\tconst getList = async(page)=>{\r\n\t\t\ttry{\r\n\t\t\t\tconst res = await axios.get(\"comments\",{params:{board_num : board_num, page:page}})\r\n\t\t\t\tlistcount.value = res.data.listcount;\r\n\t\t\t\tlist.value = res.data.list;\r\n\r\n\t\t\t\tif(listcount.value==0){\r\n\t\t\t\t\tmessage.value=\"등록된 댓글이 없습니다.\"\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(listcount.value > list.value.length){\r\n\t\t\t\t\t\tmessage.value=\"더보기\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tmessage.value=\"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcount_message.value=\"총 50자까지 가능합니다.\"\r\n\r\n\t\t\t\t//store에 저장\r\n\t\t\t\tstore.dispatch('count', listcount.value);\r\n\t\t\t}catch(err){\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetList(1);\r\n\r\n\t\tconst limit = 50; // 총 50자까지 가능\r\n\t\tconst change = (event)=>{\r\n\t\t\tlet value = event.target.value;\r\n\t\t\tlet length = value.length;\r\n\t\t\tif(length>limit){\r\n\t\t\t\tvalue = value.substring(0, limit);\r\n\t\t\t\tlength = limit;\r\n\t\t\t}\r\n\t\t\tcount_message.value=length + \"/\" +limit;\r\n\t\t}\r\n\r\n\t\tconst add = async ()=>{\r\n\t\t\tif(!content.value){\r\n\t\t\t\t\talert(\"내용을 입력하세요\");\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet res;\r\n\r\n\t\t\ttry{\r\n\t\t\t\tif(button_message.value==\"등록\"){\r\n\t\t\t\t\tres = await axios.post(\"comments/new\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{board_num:board_num,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent:content.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid:props.parent_id});\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tres = await axios.patch(\"comments\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{num:comment_num,content:content.value});\r\n\t\t\t\t\tbutton_message.value=\"등록\";\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t}\r\n\t\t\t\tcontent.value=\"\";\r\n\t\t\t\tif(res.data==1)\r\n\t\t\t\t\t\tgetList(1);\r\n\t\t\t}catch(err){\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}//add end\r\n\r\n\t\tconst del  = async (num)=>{\r\n\t\t\tconsole.log(\"삭제 num=\"+num)\r\n\t\t\tif(!confirm(\"정말 삭제하시겠습니까?\")){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttry{\t\r\n\t\t\t\tconst res=await axios.delete(`comments/${num}`);\r\n\t\t\t\tif(res.data==1)\r\n\t\t\t\t\tgetList(1);\r\n\t\t\t}catch(err){\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}//del end\r\n\r\n\t\tconst update = (con, num)=>{\r\n\t\t\tbutton_message.value=\"수정완료\";\r\n\t\t\tcontent.value=con;\r\n\t\t\tcomment_num=num;\r\n\t\t\tcount_message.value=con.length+\"/\"+limit\r\n\t\t}\r\n\r\n\t\tconst more = ()=>{\r\n\t\t\tgetList(++page);\r\n\t\t}\r\n\r\n\t\treturn{\r\n\t\t\tmessage, listcount, list, content, button_message, count_message,\r\n\t\t\tadd, update, del, more, change\r\n\t\t}\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\timg {\r\n\t\twidth:15px;\r\n\t}\r\n\t#comment > table > tbody > tr  td:nth-child(1) {width:20%}\r\n\t#comment > table > tbody > tr  td:nth-child(2) {width:50%}\r\n\t.float-right {margin-right: 0px;}\r\n\t\r\n\t</style>\r\n\t"]},"metadata":{},"sourceType":"module"}