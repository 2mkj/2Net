{"ast":null,"code":"import { ref, watch } from 'vue';\nimport axios from '../../axios/axiossetting.js';\nimport { useRouter } from 'vue-router';\nexport default {\n  props: {\n    parent_id: {\n      type: String,\n      required: false\n    }\n  },\n\n  setup(props, context) {\n    context.emit(\"parent_getSession\");\n    const join = ref({\n      id: '',\n      password: '',\n      name: '',\n      age: '',\n      gender: '',\n      email: ''\n    });\n    const email_message = ref('');\n    const email_color = ref('');\n    const router = useRouter();\n    console.log('watch before=' + props.parent_id);\n    watch(() => props.parent_id, () => {\n      console.log('watch=' + props.parent_id);\n      info();\n    });\n    watch(() => join.value.email, (next, prev) => {\n      console.log('watch(email) : ' + prev + \" => \" + next);\n      var pattern = /^\\w+@\\w+[.]\\w{3}$/;\n\n      if (!pattern.test(join.value.email)) {\n        email_message.value = \"이메일 형식이 맞지않습니다.\";\n        email_color.value = 'red';\n      } else {\n        email_message.value = \"이메일 형식이 일치합니다.\";\n        email_color.value = 'green';\n      } //else end\n\n    }); //watch end\n\n    const info = async () => {\n      try {\n        const res = await axios.get(`members/${props.parent_id}`);\n\n        if (res.data != null) {\n          join.value = res.data;\n        } else {\n          console.log('null입니다.');\n          router.push(\"{name:'404'}\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    info();\n\n    const update = async () => {\n      if (email_color.value == \"red\") {\n        alert(\"email을 확인하세요\");\n      } else {\n        try {\n          const res = await axios.put('members', join.value);\n\n          if (res.data == 1) {\n            alert(\"수정완료되었습니다\");\n            router.push({\n              name: 'Board_List'\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    return {\n      join,\n      email_message,\n      email_color,\n      update\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","watch","axios","useRouter","props","parent_id","type","String","required","setup","context","emit","join","id","password","name","age","gender","email","email_message","email_color","router","console","log","info","value","next","prev","pattern","test","res","get","data","push","err","update","alert","put"],"sourceRoot":"","sources":["C:\\Users\\sijun\\Documents\\카카오톡 받은 파일\\simple_vue_project\\Elv\\vue\\src\\component\\member\\member_update.vue"],"sourcesContent":["\r\n<template>\r\n  <form name=\"joinform\" @submit.prevent=\"update\">\r\n    <h1>회원 수정 페이지</h1>\r\n    <hr>\r\n    <b>아이디</b>\r\n    <input type=\"text\" :value=\"join.id\" readonly maxlength=\"12\" placeholder=\"Enter id\">\r\n        \r\n    <b>비밀번호</b>\r\n    <input type=\"password\" v-model.lazy=\"join.password\" required placeholder=\"Enter password\">\r\n        \r\n    <b>이름</b>\r\n    <input type=\"text\" v-model.lazy=\"join.name\" maxlength=\"15\" required placeholder=\"Enter name\">\r\n        \r\n    <b>나이</b>\r\n    <input type=\"text\" maxlength=\"2\" v-model.lazy=\"join.age\" \r\n                            pattern=\"[1-9][0-9]\" required placeholder=\"Enter age\">\r\n    \r\n    <b>성별</b>\r\n    <div>\r\n        <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"남\" checked><span>남자</span>\r\n        <input type=\"radio\" name=\"gender\" v-model.lazy=\"join.gender\" value=\"여\"><span>여자</span>\r\n    </div>\r\n        \r\n    <b>이메일 주소</b>\r\n        <input type=\"text\" v-model=\"join.email\" maxlength=\"30\" required placeholder=\"Enter email\">\r\n        <span :class=\"email_color\">{{email_message}}</span>\r\n\r\n    <div class=\"clearfix\">\r\n        <button type=\"submit\" class=\"submitbtn\">수정완료</button>\r\n        <router-link :to=\"{name:'Board_List'}\">\r\n        <button class=\"cancelbtn\">다시작성</button>\r\n        </router-link>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport {ref,watch} from 'vue';\r\nimport axios from '../../axios/axiossetting.js';\r\nimport { useRouter } from 'vue-router';\r\nexport default {\r\n    props:{\r\n        parent_id:{\r\n            type:String,\r\n            required:false\r\n        }\r\n    },\r\n    setup(props, context){\r\n        context.emit(\"parent_getSession\");\r\n        const join= ref({\r\n            id:'',\r\n            password:'',\r\n            name:'',\r\n            age:'',\r\n            gender:'',\r\n            email:''\r\n        });\r\n        const email_message=ref('');\r\n        const email_color=ref('');\r\n        const router = useRouter();\r\n        console.log('watch before='+props.parent_id);\r\n        watch(()=>props.parent_id,()=>{\r\n            console.log('watch='+props.parent_id);\r\n            info();\r\n        })\r\n\r\n        watch(()=> join.value.email,\r\n            (next, prev)=>{\r\n                  console.log('watch(email) : ' + prev + \" => \" + next)\r\n                  var pattern = /^\\w+@\\w+[.]\\w{3}$/;\r\n                    if(!pattern.test(join.value.email )){\r\n                        email_message.value=\"이메일 형식이 맞지않습니다.\";\r\n                        email_color.value='red';\r\n                    }else{\r\n                        email_message.value=\"이메일 형식이 일치합니다.\";\r\n                        email_color.value='green';\r\n                    }//else end\r\n        })//watch end\r\n\r\n        const info = async () =>{\r\n            try{\r\n                const res = await axios.get(`members/${props.parent_id}`);\r\n                if(res.data != null){\r\n                    join.value=res.data;\r\n                }else{\r\n                    console.log('null입니다.');\r\n                    router.push(\"{name:'404'}\")\r\n                }\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n        info();\r\n\r\n        const update = async () =>{\r\n            if(email_color.value==\"red\"){\r\n                alert(\"email을 확인하세요\");\r\n            }else{\r\n                try{\r\n                    const res = await axios.put('members',join.value);\r\n                    if(res.data==1){\r\n                        alert(\"수정완료되었습니다\")\r\n                        router.push({\r\n                            name:'Board_List'\r\n                        })\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return{\r\n                join,email_message,email_color, update\r\n            };\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .red{color:red}\r\n    .green{color:green}\r\n     input[type=text] + span{   position: relative;\r\n            top: -20px;\r\n     }\r\n    form {font-family: Arial, Helvetica, sans-serif;}\r\n    * {box-sizing: border-box}\r\n    \r\n    \r\n    input{border-radius:3px;border:1px solid lightgray}\r\n    input[type=text], input[type=password] {\r\n        width: 100%;\r\n        padding: 10px;\r\n        margin: 5px 0 22px 0;\r\n        display: inline-block;\r\n       \r\n    }\r\n    \r\n    \r\n    input[type=radio]{\r\n        width: 5%;\r\n        display: inline-block;\r\n        border: none;\r\n    }\r\n    \r\n    \r\n    input[type=text]:focus, input[type=password]:focus {\r\n      box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\r\n        outline: none;\r\n    }\r\n    button {\r\n        background-color: #4CAF50;\r\n        color: white;\r\n        padding: 14px 20px;\r\n        margin: 8px 0;\r\n        border: none;\r\n        cursor: pointer; /* 손가락 커서 모양 */\r\n        width: 100%;\r\n        opacity: 0.9;\r\n    }\r\n    \r\n    button:hover {\r\n        opacity:1;\r\n        \r\n    }\r\n    button:focus{\r\n       outline:none;\r\n    }\r\n    \r\n    /* 취소 버튼*/\r\n    .cancelbtn {\r\n        padding: 14px 20px;\r\n        background-color: #f44336;\r\n    }\r\n    \r\n    .cancelbtn, .submitbtn {\r\n      float: left;\r\n      width: 50%;\r\n    }\r\n    form {\r\n        background-color: #fefefe;\r\n        margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\r\n        border: 1px solid lightgray;\r\n        width: 600px; /* Could be more or less, depending on screen size */\r\n        padding: 16px;\r\n    }\r\n    \r\n    hr {\r\n        border: 1px solid #f1f1f1;\r\n        margin-bottom: 25px;\r\n    }\r\n     \r\n    b + div{width: 100%;\r\n        padding: 10px;\r\n        margin: 5px 0 22px 0;\r\n        display: inline-block;\r\n        border: none;\r\n        background: #f1f1f1;}\r\n    \r\n    /* Clear floats */\r\n    .clearfix::after {\r\n        content: \"\";\r\n        clear: both;\r\n        display: table; \r\n    }\r\n    \r\n    h1{text-align:center}\r\n    \r\n    b {\r\n        width: 100%;\r\n        display: block\r\n    }\r\n    \r\n    span{display:inline-block;margin-top:-20px;font-size:10px}\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module"}