{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-df4de07c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\r\\n    수식어 사용 예\\r\\n    https://v3.ko.vuejs.org/guide/forms.html#lazy\\r\\n\\r\\n    1. v-model.lazy\\r\\n                입력 후 Enter키나 포커스를 다른곳으로 이동할때 name에 입력되어 나타납니다.\\r\\n\\r\\n    2. v-model.number\\r\\n        사용자 입력이 자동으로 숫자로 형변환 되기를 원하면, v-model이 관리하는\\r\\n        input에 number 수식어를 추가하면 됩니다\\r\\n        수식으로 변경하고 싶을때 사용합니다.\\r\\n\\r\\n    3. v-model.trim\\r\\n                앞뒤 공백을 제거합니다.\\r\\n\"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 입력시 스페이스바를 이용해서 공백을 넣을 후 글자를 입력해보세요\"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.name]]), _createElementVNode(\"p\", null, _toDisplayString($setup.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($setup.name.length), 1\n  /* TEXT */\n  ), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.name2 = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.name2, void 0, {\n    trim: true\n  }]]), _createElementVNode(\"p\", null, _toDisplayString($setup.name2), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($setup.name2.length), 1\n  /* TEXT */\n  )])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EAgBKA,KAAK,EAAC;;;gEAKHC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;6DApBRC,sZAeAD,oBASM,KATN,cASM,CARFC,2DAQE,kBAPED,oBAAuD,OAAvD,EAAuD;+DAAvCE,cAAIC,OAAmC;IAAjCC,IAAI,EAAC,MAA4B;IAArBL,KAAK,EAAC;EAAe,CAAvD;;EAAA,kBAAgBG,cAOlB,EANEF,oBAAe,GAAf,EAAe,IAAf,EAAeK,iBAAVH,WAAU,CAAf,EAAS;EAAA;EAAT,CAMF,EALEF,oBAAsB,GAAtB,EAAsB,IAAtB,EAAsBK,iBAAjBH,YAAKI,MAAY,CAAtB,EAAgB;EAAA;EAAhB,CAKF,EAJEC,UAIF,kBAHEP,oBAA6D,OAA7D,EAA6D;+DAAxCE,eAAKC,OAAmC;IAAjCC,IAAI,EAAC,MAA4B;IAArBL,KAAK,EAAC;EAAe,CAA7D;;EAAA,kBAAqBG;UAAd;MAGT,EAFEF,oBAAgB,GAAhB,EAAgB,IAAhB,EAAgBK,iBAAXH,YAAW,CAAhB,EAAU;EAAA;EAAV,CAEF,EADEF,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBK,iBAAlBH,aAAMI,MAAY,CAAvB,EAAiB;EAAA;EAAjB,CACF,CATN","names":["class","_createElementVNode","_createCommentVNode","$setup","$event","type","_toDisplayString","length","_hoisted_2"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex04_v_medel\\App13_trim.vue"],"sourcesContent":["<template>\r\n<!--\r\n    수식어 사용 예\r\n    https://v3.ko.vuejs.org/guide/forms.html#lazy\r\n\r\n    1. v-model.lazy\r\n                입력 후 Enter키나 포커스를 다른곳으로 이동할때 name에 입력되어 나타납니다.\r\n\r\n    2. v-model.number\r\n        사용자 입력이 자동으로 숫자로 형변환 되기를 원하면, v-model이 관리하는\r\n        input에 number 수식어를 추가하면 됩니다\r\n        수식으로 변경하고 싶을때 사용합니다.\r\n\r\n    3. v-model.trim\r\n                앞뒤 공백을 제거합니다.\r\n-->\r\n<div class=\"container\">\r\n    <!-- 입력시 스페이스바를 이용해서 공백을 넣을 후 글자를 입력해보세요-->\r\n        <input v-model=\"name\" type=\"text\" class=\"form-control\">\r\n        <p>{{name}}</p>\r\n        <p>{{name.length}}</p>\r\n        <hr>\r\n        <input v-model.trim=\"name2\" type=\"text\" class=\"form-control\">\r\n        <p>{{name2}}</p>\r\n        <p>{{name2.length}}</p>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {ref,watch} from 'vue';\r\nexport default {\r\n    setup(){\r\n        const name = ref('');\r\n        const name2 = ref('');\r\n\r\n        watch(name, () => {\r\n            console.log(name.value);\r\n        })\r\n        watch(name2, () => {\r\n            console.log(name.value);\r\n        })\r\n        return{\r\n            name, name2\r\n        };\r\n    }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\nlabel {display:block}\r\n</style>"]},"metadata":{},"sourceType":"module"}