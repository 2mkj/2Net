{"ast":null,"code":"/*      https://kr.vuejs.org/v2/guide/components.htm\r\n      1. 컴포넌트랑\r\n    조합하여 화면을 구성할 수 있는 블록을 의미합니다.\r\n    컴포넌트를 활용하면 화면을 빠르게 구조화하여 일괄적인 패턴으로 개발 할 수 있으며,\r\n    코드를 쉽게 이해하고 재사용할 수 있습니다.\r\n      2. 컴포넌트 사용법\r\n    (1) <script>에서 컴포넌의 위치와 이름을 import문으로 작성합니다.\r\n    (2) export default { 의 components 속성에 사용할 컴포넌트 이름을 작성합니다. \r\n    (3) <template>에서 컴포넌트를 배치합니다.\r\n*/\nimport child from './childView.vue';\nexport default {\n  components: {\n    child\n  }\n};","map":{"version":3,"mappings":"AAQI;;;;;;;;;;AAYJ,OAAOA,KAAP,MAAkB,iBAAlB;AACA,eAAe;EACXC,UAAU,EAAC;IACPD;EADO;AADA,CAAf","names":["child","components"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex16_component\\_2_props\\parentView.vue"],"sourcesContent":["<template>\r\n  <div class=\"parent\">\r\n    나는 부모입니다.\r\n    <child val=\"나는 부모\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    /*      https://kr.vuejs.org/v2/guide/components.htm\r\n\r\n        1. 컴포넌트랑\r\n        조합하여 화면을 구성할 수 있는 블록을 의미합니다.\r\n        컴포넌트를 활용하면 화면을 빠르게 구조화하여 일괄적인 패턴으로 개발 할 수 있으며,\r\n        코드를 쉽게 이해하고 재사용할 수 있습니다.\r\n\r\n        2. 컴포넌트 사용법\r\n        (1) <script>에서 컴포넌의 위치와 이름을 import문으로 작성합니다.\r\n        (2) export default { 의 components 속성에 사용할 컴포넌트 이름을 작성합니다. \r\n        (3) <template>에서 컴포넌트를 배치합니다.\r\n    */\r\nimport child from './childView.vue'\r\nexport default {\r\n    components:{\r\n        child\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.parent{\r\n    background: cornsilk;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}