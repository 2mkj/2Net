{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from './axios/axiossetting.js';\nimport Nav2 from './component/navDo.vue';\nexport default {\n  components: {\n    //(2) template에서 사용할 컴포넌트의 정보를 작성하는 속성입니다.(컴포넌트 등록)\n    'Nav': Nav2 // 'template에서 사용할 컴포넌트이름' : 컴포넌트내용\n\n  },\n\n  setup() {\n    const id = ref(''); //페이지 이동하기 위해 useRouter()를 사용합니다.\n\n    const router = useRouter(); //member_login.vue에서 context.emit(\"parent_getSession\", \"\"); 로 보냅니다.\n    ///vue/boards 상태에서 /vue/login으로 직접 주소를 입력한 경우 내부적으로 로그아웃이 되도록 처리합니다.\n\n    const getSession = async received_id => {\n      if (received_id == '') {\n        try {\n          const res = await axios.post(\"members/logout\");\n          id.value = '';\n          console.log(res.data);\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        try {\n          const res = await axios.get(\"getSession\");\n          id.value = res.data;\n          console.log(\"여기는 App_1.vue getSession:\" + id.value);\n\n          if (id.value == '') {\n            //null은 값으로 빈문자열로 리턴\n            //route의 이름이 'Login' 인 경로로 이동합니다.\n            router.push({\n              name: 'Login'\n            });\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      } // else end\n\n    }; // get Session end\n\n\n    return {\n      id,\n      getSession\n    };\n  } //setup end\n\n\n}; // export","map":{"version":3,"mappings":"AAoCI,SAAQA,GAAR,QAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACJ,eAAe;EACHC,UAAU,EAAC;IAAG;IACT,OAAMD,IADA,CACK;;EADL,CADR;;EAILE,KAAK,GAAE;IACC,MAAMC,EAAC,GAAIN,GAAG,CAAC,EAAD,CAAd,CADD,CAGC;;IACA,MAAMO,MAAK,GAAIN,SAAS,EAAxB,CAJD,CAMC;IACA;;IACA,MAAMO,UAAS,GAAK,MAAOC,WAAP,IAAsB;MACpC,IAAGA,WAAW,IAAE,EAAhB,EAAmB;QACb,IAAG;UACH,MAAMC,GAAE,GAAI,MAAMR,KAAK,CAACS,IAAN,CAAW,gBAAX,CAAlB;UACAL,EAAE,CAACM,KAAH,GAAS,EAAT;UACAC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;QACC,CAJD,CAIC,OAAMC,KAAN,EAAY;UACXH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACF;MACL,CARD,MAQK;QACG,IAAG;UACD,MAAMN,GAAE,GAAI,MAAMR,KAAK,CAACe,GAAN,CAAU,YAAV,CAAlB;UACAX,EAAE,CAACM,KAAH,GAASF,GAAG,CAACK,IAAb;UACAF,OAAO,CAACC,GAAR,CAAY,8BAA4BR,EAAE,CAACM,KAA3C;;UACA,IAAGN,EAAE,CAACM,KAAH,IAAU,EAAb,EAAgB;YAAG;YACf;YACFL,MAAM,CAACW,IAAP,CAAY;cACVC,IAAI,EAAC;YADK,CAAZ;UAGF;QACP,CAVK,CAUL,OAAMC,GAAN,EAAU;UACTP,OAAO,CAACC,GAAR,CAAYM,GAAZ;QACF;MACD,CAvBmC,CAuBnC;;IACR,CAxBC,CARD,CAgCA;;;IAED,OAAM;MACJd,EADI;MACAE;IADA,CAAN;EAID,CA1CA,CA0CA;;;AA1CA,CAAf,C,CA2Ca","names":["ref","useRouter","axios","Nav2","components","setup","id","router","getSession","received_id","res","post","value","console","log","data","error","get","push","name","err"],"sourceRoot":"","sources":["C:\\Users\\user\\vue\\simple_vue_project\\Elv\\vue\\src\\App_1.vue"],"sourcesContent":["<template>\r\n\r\n<!-- \r\n        1. 컴포넌트란\r\n            조합하여 화면을 구성할 수 있는 블록을 의미합니다.\r\n            컴포넌트를 활용하면 화면을 빠르게 구조화하여 일괄적인 패턴으로 개발 할 수 있으며,\r\n            코드를 쉽게 이해하고 재사용할 수 있습니다.\r\n\r\n        2. 컴포넌트 사용법\r\n            (1) <script>에서 컴포넌트의 위치와 이름을 import문으로 작성합니다.\r\n            (2) export default { 의 components 속성에 사용할 컴포넌트 이름을 작성합니다.\r\n            (3) <template>에서 컴포넌트를 배치합니다.\r\n        \r\n              3. :parent_id=\"id\"\r\n            자바스크립트에서 구한 id의 값을 parent_id를 통해 자식 컴포넌트에 전달할 수 있습니다.\r\n            즉, './component/navDo.vue'안에서 App_1.vue에서 구한 id값을 사용할 수 있도록 합니다.\r\n          \r\n        4. @parent_getSession=\"getSession\"\r\n            parent_getSession이라는 사용자정의 이벤트 이름입니다.\r\n            자식 컴포넌트에서 parent_getSession을 호출하면 getSession함수가 실행됩니다.\r\n            parent_getSession을 호출 방법은 context.emit('부모 컴포넌트의 이벤트이름')메서드를 호출하면 됩니다.\r\n            예) <router-view @parent_getSession=\"getSession\" :parent_id=\"id\" /> 인 경우\r\n                  이 router-view 컴포넌트에 연결될 컴포넌트에서 아래와 같이 작성하면 됩니다.\r\n                    *    자식 컴포넌트에서 작성하는 코드\r\n                        context.emit(\"parent_getSession\");\r\n -->\r\n\r\n  <Nav :parent_id=\"id\" />\r\n  <div class=\"container\">\r\n    <router-view\r\n                @parent_getSession=\"getSession\"\r\n                :parent_id=\"id\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import {ref } from 'vue';\r\n    import { useRouter } from 'vue-router';\r\n    import axios from './axios/axiossetting.js';\r\n    import Nav2 from './component/navDo.vue';\r\nexport default {\r\n            components:{  //(2) template에서 사용할 컴포넌트의 정보를 작성하는 속성입니다.(컴포넌트 등록)\r\n                 'Nav':Nav2 // 'template에서 사용할 컴포넌트이름' : 컴포넌트내용\r\n                },\r\n          setup(){\r\n                  const id = ref('');\r\n                  \r\n                  //페이지 이동하기 위해 useRouter()를 사용합니다.\r\n                  const router = useRouter();\r\n                  \r\n                  //member_login.vue에서 context.emit(\"parent_getSession\", \"\"); 로 보냅니다.\r\n                  ///vue/boards 상태에서 /vue/login으로 직접 주소를 입력한 경우 내부적으로 로그아웃이 되도록 처리합니다.\r\n                  const getSession  = async (received_id) =>{\r\n                        if(received_id==''){\r\n                              try{\r\n                              const res = await axios.post(\"members/logout\");\r\n                              id.value='';\r\n                              console.log(res.data);\r\n                              }catch(error){\r\n                                console.log(error);\r\n                              }\r\n                        }else{\r\n                                try{\r\n                                  const res = await axios.get(\"getSession\");\r\n                                  id.value=res.data;\r\n                                  console.log(\"여기는 App_1.vue getSession:\"+id.value)\r\n                                  if(id.value==''){  //null은 값으로 빈문자열로 리턴\r\n                                      //route의 이름이 'Login' 인 경로로 이동합니다.\r\n                                    router.push({\r\n                                      name:'Login'\r\n                                    });\r\n                                  }\r\n                          }catch(err){\r\n                            console.log(err);\r\n                          }\r\n                        }// else end\r\n                }// get Session end\r\n\r\n                return{\r\n                  id, getSession\r\n                }\r\n\r\n              }//setup end\r\n            }// export\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}