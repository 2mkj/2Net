{"ast":null,"code":"import axios from './axios/axiossetting.js';\nimport { ref, onMounted } from 'vue';\nexport default {\n  setup() {\n    console.log('[App1]setup start');\n    const id = ref('');\n\n    const getSession = async () => {\n      console.log('getSession() start');\n\n      try {\n        const res = await axios.get(\"getSession_ex1\");\n        console.log(\"res=\" + res.data);\n        id.value = res.data;\n\n        if (id.value == '') {\n          //null은 값으로 빈문자열로 리턴\n          console.log('null');\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log('getSession() end');\n    };\n\n    getSession(); //컴포넌트 인스턴스가 마운트 된 후 호출됩니다\n\n    onMounted(() => {\n      console.log('[App1.vue]Component is mounted!');\n    });\n    console.log('[App1]setup end');\n    return {\n      id\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA+BA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,SAAQC,GAAR,EAAaC,SAAb,QAA6B,KAA7B;AACA,eAAe;EACXC,KAAK,GAAE;IACLC,OAAO,CAACC,GAAR,CAAY,mBAAZ;IAEA,MAAMC,EAAE,GAACL,GAAG,CAAC,EAAD,CAAZ;;IACE,MAAMM,UAAS,GAAI,YAAS;MAC1BH,OAAO,CAACC,GAAR,CAAY,oBAAZ;;MACE,IAAG;QACC,MAAMG,GAAE,GAAI,MAAMR,KAAK,CAACS,GAAN,CAAU,gBAAV,CAAlB;QACAL,OAAO,CAACC,GAAR,CAAY,SAAOG,GAAG,CAACE,IAAvB;QACAJ,EAAE,CAACK,KAAH,GAASH,GAAG,CAACE,IAAb;;QACA,IAAGJ,EAAE,CAACK,KAAH,IAAU,EAAb,EAAgB;UAAE;UAChBP,OAAO,CAACC,GAAR,CAAY,MAAZ;QACF;MACH,CAPD,CAOC,OAAMO,GAAN,EAAU;QACPR,OAAO,CAACC,GAAR,CAAYO,GAAZ;MACJ;;MACAR,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACJ,CAbA;;IAeAE,UAAU,GAnBP,CAqBH;;IACAL,SAAS,CAAC,MAAI;MACZE,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACD,CAFQ,CAAT;IAIAD,OAAO,CAACC,GAAR,CAAY,iBAAZ;IAEA,OAAM;MACJC;IADI,CAAN;EAGJ;;AAhCW,CAAf","names":["axios","ref","onMounted","setup","console","log","id","getSession","res","get","data","value","err"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex15_login\\App_1.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <nav class=\"navbar navbar-expand-sm right-block navbar-dark\" v-if=\"id\">\r\n\t<ul class=\"navbar-nav\">\r\n\t    <li class=\"nav-item\">\r\n\t  \t  <router-link v-if=\"id\" class=\"nav-link\" :to=\"{name:'Login'}\">{{id}}님(로그아웃)</router-link></li>\r\n          <li class=\"nav-item\"><router-link class=\"nav-link\" :to=\"{name:'Update'}\">정보수정</router-link></li>\r\n          \r\n          <!--admin 메뉴-->\r\n          <div v-if=\"id=='admin'\">\r\n\t       <!-- Dropdown -->\r\n\t       <li class=\"nav-item dropdown\">\r\n\t\t       <router-link class=\"nav-Link dropdown-toggle\" to=\"#\" id=\"navbardrop\"\r\n\t\t          data-toggle=\"dropdown\"> 관리자 </router-link>\r\n\t\t        <div class=\"dropdown-menu\">\r\n              <!--\r\n                :to=\"{name:'Info'}\" route의 이름으로 접근하는 방식\r\n              -->\r\n\t\t        \t<router-link class=\"dropdown-item\" :to=\"{name:'Info'}\">회원정보</router-link>\r\n\t\t        \t<router-link class=\"dropdown-item\" :to=\"{name:'Board'}\">게시판</router-link>\r\n\t\t        </div>\r\n          </li>\r\n          </div>\r\n\t  </ul>\r\n</nav>\r\n<!-- <router-link>로 이동하면 화면에 컴포넌트가 <router-view>에 나타납니다 -->\r\n<router-view/>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from './axios/axiossetting.js';\r\nimport {ref, onMounted} from 'vue';\r\nexport default {\r\n    setup(){\r\n      console.log('[App1]setup start')\r\n\r\n      const id=ref('');\r\n        const getSession = async()=>{\r\n          console.log('getSession() start')\r\n            try{\r\n                const res = await axios.get(\"getSession_ex1\"); \r\n                console.log(\"res=\"+res.data) \r\n                id.value=res.data;\r\n                if(id.value==''){ //null은 값으로 빈문자열로 리턴\r\n                  console.log('null');\r\n                }            \r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            console.log('getSession() end')\r\n        }\r\n\r\n        getSession();\r\n        \r\n        //컴포넌트 인스턴스가 마운트 된 후 호출됩니다\r\n        onMounted(()=>{\r\n          console.log('[App1.vue]Component is mounted!')\r\n        })\r\n\r\n        console.log('[App1]setup end')\r\n\r\n        return{\r\n          id\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nnav.navbar {\r\n\tjustify-content: flex-end; /* 오른쪽 정렬 */\r\n}\r\n\r\n.dropdown-menu {\r\nmin-width: 0rem; \r\n}\r\n\r\n/* nav 색상 지정 */\r\n.navbar {\r\n\tbackground: #096988;\r\n\tmargin-bottom: 3em;\r\n\tpadding-right: 3em;\r\n}\r\n\r\n.navbar-dark .navbar-nav .nav-link, #navbardrop {\r\n\tcolor: rgb(255, 255, 255);\r\n}\r\n\r\n.dropdown-menu a:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n.dropdown:hover .dropdown-menu {\r\n  display: block;\r\n}\r\n\r\na{text-decoration: none;}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}