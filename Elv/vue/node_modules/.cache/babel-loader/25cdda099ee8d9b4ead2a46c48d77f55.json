{"ast":null,"code":"/* \r\naxiosetting.js 에서 정의\r\nexport default axios.create({\r\n    baseURL : 'http://localhost:8088/vue/'\r\n})\r\n\r\naxios 적용시 baseURL을 제외한 주소 작성 가능합니다\r\n await axios.post('http://localhost:8088/vue/users',{\r\n    => await axios.post('users',{\r\n*/\nimport axios from './axiossetting.js';\nimport { ref } from 'vue';\nexport default {\n  setup() {\n    const list = ref([]);\n    const error = ref('');\n    const input_name = ref('');\n    const input_age = ref(0);\n    const state = ref('추가');\n    let update_id = 0; //138번 라인에서 수정할 아이디값을 저장할 변수입니다.\n\n    const limit = 2;\n    const currentpage = ref(1);\n    const maxpage = ref(1);\n    const listcount = ref(0);\n    const pagelist = ref([]); //page = currentpage.value\n    //매개변수로 page값을 받았는데 만약 전달된 값이 없는 경우 currentpage.value값을 갖습니다\n    //getList()로 호출하면 page는 currentpage.value값을 갖습니다\n    //getList(2)로 호출하면 page는 2의 값을 갖습니다\n\n    const getList = async (page = currentpage.value) => {\n      try {\n        const res = await axios.get(`users?page=${page}&limit=${limit}`);\n        list.value = res.data.list;\n        listcount.value = res.data.listcount;\n        maxpage.value = res.data.maxpage;\n        currentpage.value = res.data.currentpage;\n        pagelist.value = [];\n\n        for (let i = res.data.startpage; i <= res.data.endpage; i++) {\n          pagelist.value.push(i);\n        }\n      } catch (err) {\n        console.log(err);\n        error.value = '데이터를 가져오는 중 오류';\n      }\n    };\n\n    getList();\n\n    const add = async () => {\n      error.value = '';\n\n      if (state.value == '추가') {\n        try {\n          await axios.post('users', {\n            name: input_name.value,\n            age: input_age.value\n          });\n          input_name.value = '';\n          input_age.value = '';\n          getList();\n        } catch (err) {\n          console.log(err);\n          error.value = '삽입 중 오류 발생';\n        }\n      } else {\n        try {\n          await axios.patch('users', {\n            name: input_name.value,\n            age: input_age.value,\n            id: update_id\n          });\n          input_name.value = '';\n          input_age.value = '';\n          state.value = '추가';\n          getList();\n        } catch (err) {\n          console.log(err);\n          error.value = 'update 중 오류 발생';\n        }\n      } //else end\n\n    }; //add end\n\n\n    const del = async id => {\n      let answer = confirm('정말 삭제하시겠습니까?');\n\n      if (answer) {\n        try {\n          await axios.delete(`users/${id}`);\n          getList();\n        } catch (err) {\n          console.log(err);\n          error.value = '삭제 중 오류';\n        }\n      } //if end\n\n    }; //name list에서 수정 버튼 클릭시\n    //이름과 나이 input에 선택한 이름과 나이가 나타나고\n    //추가 버튼의 레이블을 수정완료로 변경합니다.\n\n\n    const update = item => {\n      input_name.value = item.name;\n      input_age.value = item.age;\n      state.value = '수정완료';\n      update_id = item.id; //106번 라인에서 update_id의 값을 사용합니다.\n    };\n\n    return {\n      list,\n      error,\n      add,\n      input_name,\n      input_age,\n      del,\n      update,\n      state,\n      limit,\n      currentpage,\n      maxpage,\n      listcount,\n      pagelist,\n      getList\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","ref","setup","list","error","input_name","input_age","state","update_id","limit","currentpage","maxpage","listcount","pagelist","getList","page","value","res","get","data","i","startpage","endpage","push","err","console","log","add","post","name","age","patch","id","del","answer","confirm","delete","update","item"],"sourceRoot":"","sources":["C:\\vue_project\\vue3-first\\src\\ex18_component_store\\component\\board\\board_list.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <form @submit.prevent=\"add\"><!--@submit.prevent : submit 이벤트 발생시 이동하지 않습니다-->\r\n          <div class=\"input-group mb-3 mt-3\">\r\n              <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">이름</span>\r\n              </div>\r\n              <input type=\"text\" placeholder=\"Username\" v-model=\"input_name\" class=\"form-control\" required>\r\n          </div>\r\n          <div class=\"input-group mb-3 mt-3\">\r\n              <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">나이</span>\r\n              </div>\r\n              <input type=\"text\" placeholder=\"Userage\" v-model=\"input_age\" class=\"form-control\" required\r\n                     maxlength=\"2\" pattern=\"[0-9]{1,2}\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-info\">{{state}}</button>\r\n          <div class=\"error\">{{error}}</div>\r\n      </form>\r\n          <table class=\"table table-stripped\">\r\n          <caption>\r\n             <span class=\"niji\" colspan=\"2\">name list[{{listcount}}]</span>\r\n          </caption>\r\n          <tbody>\r\n          <tr>\r\n          <th>번호</th>\r\n          <th>이름</th>\r\n          <th>나이</th>\r\n          <th>수정</th>\r\n          <th>삭제</th>\r\n          </tr>\r\n          \r\n          <tr v-for=\"(item, index) in list\" :key=\"index\">\r\n              <td>{{item.id}}</td>\r\n              <td>{{item.name}}</td>\r\n              <td>{{item.age}}</td>\r\n              <td><button class=\"btn btn-primary\" @click=\"update(item)\">수정</button></td>\r\n              <td><button class=\"btn btn-danger\" @click=\"del(item.id)\">삭제</button></td>\r\n          </tr>\r\n          </tbody>\r\n      </table>\r\n  \r\n      <nav>\r\n       <ul class=\"pagination\">\r\n          <li v-if=\"currentpage !== 1\" class=\"page-item\">\r\n              <a style=\"cursor:pointer\" class=\"page-link\" @click=\"getList(currentpage-1)\">\r\n                  Previous\r\n              </a>\r\n          </li>   \r\n          <li\r\n              v-for=\"page in pagelist\"\r\n              :key=\"page\"\r\n              class=\"page-item\" \r\n              :class=\"currentpage === page ? 'active' : ''\"\r\n          >\r\n              <a style=\"cursor:pointer\" class=\"page-link\" @click=\"getList(page)\">{{page}}</a>\r\n          </li>\r\n          <li v-if=\"maxpage > currentpage\" class=\"page-item\">\r\n              <a style=\"cursor:pointer\" class=\"page-link\" @click=\"getList(currentpage+1)\">Next</a>\r\n          </li>\r\n       </ul>\r\n      </nav>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  /* \r\n  axiosetting.js 에서 정의\r\n  export default axios.create({\r\n      baseURL : 'http://localhost:8088/vue/'\r\n  })\r\n  \r\n  axios 적용시 baseURL을 제외한 주소 작성 가능합니다\r\n   await axios.post('http://localhost:8088/vue/users',{\r\n      => await axios.post('users',{\r\n  */\r\n  import axios from './axiossetting.js';\r\n  import {ref} from 'vue';\r\n  export default {\r\n      setup(){\r\n          const list = ref([]);\r\n          const error= ref('');\r\n          const input_name=ref('');\r\n          const input_age=ref(0);\r\n          const state = ref('추가');\r\n          let update_id = 0; //138번 라인에서 수정할 아이디값을 저장할 변수입니다.\r\n  \r\n          const limit = 2;\r\n          const currentpage = ref(1);\r\n          const maxpage = ref(1);\r\n          const listcount = ref(0);\r\n          const pagelist = ref([])\r\n  \r\n  \r\n          //page = currentpage.value\r\n          //매개변수로 page값을 받았는데 만약 전달된 값이 없는 경우 currentpage.value값을 갖습니다\r\n          //getList()로 호출하면 page는 currentpage.value값을 갖습니다\r\n          //getList(2)로 호출하면 page는 2의 값을 갖습니다\r\n          const getList = async (page=currentpage.value) =>{\r\n           try{\r\n                  const res = await axios.get(`users?page=${page}&limit=${limit}`);\r\n                  \r\n                  list.value = res.data.list;\r\n                  listcount.value=res.data.listcount;\r\n                  maxpage.value=res.data.maxpage;\r\n                  currentpage.value=res.data.currentpage;\r\n  \r\n                  pagelist.value=[];\r\n                  for(let i=res.data.startpage; i<=res.data.endpage;i++){\r\n                      pagelist.value.push(i);\r\n                  }\r\n           }catch(err){\r\n                  console.log(err);\r\n                  error.value = '데이터를 가져오는 중 오류';\r\n              }\r\n          };\r\n  \r\n          getList();\r\n  \r\n          const add = async () =>{\r\n              error.value='';\r\n          if(state.value=='추가'){\r\n           try{\r\n                  await axios.post('users',{\r\n                      name: input_name.value,\r\n                      age : input_age.value\r\n                  });\r\n                  input_name.value='';\r\n                  input_age.value='';\r\n                  getList();\r\n           }catch(err){\r\n                  console.log(err);\r\n                  error.value = '삽입 중 오류 발생';\r\n              }\r\n          }else{\r\n              try{ \r\n                  await axios.patch('users', {\r\n                      name: input_name.value,\r\n                      age: input_age.value,\r\n                      id: update_id\r\n                   });  \r\n                  input_name.value='';\r\n                  input_age.value='';\r\n                  state.value='추가';\r\n                  getList();\r\n           }catch(err){\r\n                  console.log(err);\r\n                  error.value = 'update 중 오류 발생';\r\n              }\r\n          }//else end\r\n          };//add end\r\n  \r\n          const del = async (id) =>{\r\n              let answer = confirm('정말 삭제하시겠습니까?');\r\n              if(answer){\r\n              try{\r\n                  await axios.delete(`users/${id}`); \r\n                  getList();\r\n              }catch(err){\r\n                  console.log(err);\r\n                  error.value = '삭제 중 오류';\r\n              }\r\n              }//if end\r\n          };\r\n  \r\n          //name list에서 수정 버튼 클릭시\r\n          //이름과 나이 input에 선택한 이름과 나이가 나타나고\r\n          //추가 버튼의 레이블을 수정완료로 변경합니다.\r\n          const update = (item)=>{\r\n              input_name.value=item.name;\r\n              input_age.value=item.age;\r\n              state.value='수정완료';\r\n              update_id = item.id; //106번 라인에서 update_id의 값을 사용합니다.\r\n          }\r\n  \r\n          return {\r\n              list, error, add, input_name, input_age, del, update, state,\r\n              limit, currentpage, maxpage, listcount, pagelist, getList\r\n          }\r\n      }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n    caption {\r\n      caption-side: top;\r\n      text-align: center;\r\n    }\r\n    table {\r\n      text-align: center;\r\n    }\r\n    button{\r\n      vertical-align:top\r\n    }\r\n      select{width:20%;}\r\n      input{width:50%;}\r\n      input:focus{outline:none;}\r\n      #s1{font-size:18px}\r\n      table{text-align: center;font-size:20px;margin:0 auto}\r\n      caption{ caption-side: top; text-align: center}\r\n      .error{color:tomato}\r\n      </style>"]},"metadata":{},"sourceType":"module"}